import{_ as l,C as p,o as e,c as o,k as t,a as s,H as c,w as r,Q as n}from"./chunks/framework.98c15f2e.js";const v=JSON.parse('{"title":"谁动了我的选择器？深入理解CSS选择器优先级","description":"","frontmatter":{"title":"谁动了我的选择器？深入理解CSS选择器优先级","author":"周一","date":"2021-08-10","categories":["前端开发"],"tags":["CSS"],"sidebar":"auto"},"headers":[{"level":1,"title":"😏 序言","slug":"😏-序言","link":"#😏-序言","children":[]},{"level":1,"title":"🧐 文章内容抢先看","slug":"🧐-文章内容抢先看","link":"#🧐-文章内容抢先看","children":[]},{"level":1,"title":"🤐 一、基础知识","slug":"🤐-一、基础知识","link":"#🤐-一、基础知识","children":[{"level":2,"title":"1、为什么 CSS 选择器很强","slug":"_1、为什么-css-选择器很强","link":"#_1、为什么-css-选择器很强","children":[]},{"level":2,"title":"2、CSS 选择器的一些基本概念","slug":"_2、css-选择器的一些基本概念","link":"#_2、css-选择器的一些基本概念","children":[{"level":3,"title":"（1）4 种基本概念","slug":"_1-4-种基本概念","link":"#_1-4-种基本概念","children":[{"level":4,"title":"Ⅰ. 选择器","slug":"i-选择器","link":"#i-选择器","children":[]},{"level":4,"title":"Ⅱ. 选择符","slug":"ii-选择符","link":"#ii-选择符","children":[]},{"level":4,"title":"Ⅲ. 伪类","slug":"iii-伪类","link":"#iii-伪类","children":[]},{"level":4,"title":"Ⅳ. 伪元素","slug":"iv-伪元素","link":"#iv-伪元素","children":[]}]},{"level":3,"title":"（2）CSS 选择器的命名空间","slug":"_2-css-选择器的命名空间","link":"#_2-css-选择器的命名空间","children":[]}]}]},{"level":1,"title":"😲 二、CSS 选择器的优先级","slug":"😲-二、css-选择器的优先级","link":"#😲-二、css-选择器的优先级","children":[{"level":2,"title":"1、优先级规则概览","slug":"_1、优先级规则概览","link":"#_1、优先级规则概览","children":[{"level":3,"title":"（1）选择器优先级","slug":"_1-选择器优先级","link":"#_1-选择器优先级","children":[]},{"level":3,"title":"（2）选择器说明","slug":"_2-选择器说明","link":"#_2-选择器说明","children":[]}]},{"level":2,"title":"2、优先级计算","slug":"_2、优先级计算","link":"#_2、优先级计算","children":[{"level":3,"title":"（1）选择器优先级计算","slug":"_1-选择器优先级计算","link":"#_1-选择器优先级计算","children":[]},{"level":3,"title":"（2）“后来居上”原则","slug":"_2-后来居上-原则","link":"#_2-后来居上-原则","children":[]},{"level":3,"title":"（3）提升优先级的小技巧","slug":"_3-提升优先级的小技巧","link":"#_3-提升优先级的小技巧","children":[]}]}]},{"level":1,"title":"🥳 三、结束语","slug":"🥳-三、结束语","link":"#🥳-三、结束语","children":[]},{"level":1,"title":"🐣 彩蛋 One More Thing","slug":"🐣-彩蛋-one-more-thing","link":"#🐣-彩蛋-one-more-thing","children":[{"level":2,"title":"🏷️ 往期推荐&参考资料","slug":"🏷️-往期推荐-参考资料","link":"#🏷️-往期推荐-参考资料","children":[]}]}],"relativePath":"column/FrontEnd/CSS/002.md","filePath":"column/FrontEnd/CSS/002.md","lastUpdated":1723906346000}'),i={name:"column/FrontEnd/CSS/002.md"},y=n(`<h1 id="😏-序言" tabindex="-1">😏 序言 <a class="header-anchor" href="#😏-序言" aria-label="Permalink to &quot;😏 序言&quot;">​</a></h1><p>在前端的面试中，有一道很普遍的题目，就是<strong>CSS 选择器的优先级</strong>。原来周一觉得这个东西好像蛮简单的，就是认知里面的类选择器、id 选择器和标签，然后就没了。但是殊不知很多时候我们都输给了“我以为”，事实证明一切内容并没有想象中的那么简单。</p><p>当我看完书的时候，才发现优先级需要通过计算来确定，然后呢，还有通配选择器、选择符和逻辑组合伪类等等各种类型的计算。</p><p>在没有看书之前，我对这些内容的想法可能是这样的：</p><p><img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202304151136953.gif" alt="懵"></p><p>因此，写下这篇文章，总结关于 <code>CSS</code> 选择器中的优先级。一起来学习 ⑧~💡</p><h1 id="🧐-文章内容抢先看" tabindex="-1">🧐 文章内容抢先看 <a class="header-anchor" href="#🧐-文章内容抢先看" aria-label="Permalink to &quot;🧐 文章内容抢先看&quot;">​</a></h1><p>在开始讲解本文之前，我们先用一张思维导图来了解本文的结构内容。<strong>详情见下图 👇</strong></p><p><img src="https://img-blog.csdnimg.cn/26ee96b4a3d148cb8ad42a349aed6195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="思维导图"></p><p>接下来开始进入本文的讲解~</p><h1 id="🤐-一、基础知识" tabindex="-1">🤐 一、基础知识 <a class="header-anchor" href="#🤐-一、基础知识" aria-label="Permalink to &quot;🤐 一、基础知识&quot;">​</a></h1><h2 id="_1、为什么-css-选择器很强" tabindex="-1">1、为什么 CSS 选择器很强 <a class="header-anchor" href="#_1、为什么-css-选择器很强" aria-label="Permalink to &quot;1、为什么 CSS 选择器很强&quot;">​</a></h2><ul><li>传统编程语言讲求逻辑清晰，层次分明，并且主要为功能服务。</li><li>但 <code>CSS</code> 却是为样式服务的，它<strong>重表现</strong>，<strong>轻逻辑</strong>，如同人的思想一样，相互碰撞才能产生火花。</li><li>对于 <code>CSS</code> 选择器来说，它作为 <code>CSS</code> 世界的支柱，其作用好比<strong>人类的脊柱</strong>，与 <code>HTML</code> 结构、浏览器行为、用户行为以及整个 <code>CSS</code> 世界相互依存、相互作用，这必然会产生很多碰撞，使得 <code>CSS</code> 选择器变得非常强悍。</li></ul><h2 id="_2、css-选择器的一些基本概念" tabindex="-1">2、CSS 选择器的一些基本概念 <a class="header-anchor" href="#_2、css-选择器的一些基本概念" aria-label="Permalink to &quot;2、CSS 选择器的一些基本概念&quot;">​</a></h2><h3 id="_1-4-种基本概念" tabindex="-1">（1）4 种基本概念 <a class="header-anchor" href="#_1-4-种基本概念" aria-label="Permalink to &quot;（1）4 种基本概念&quot;">​</a></h3><p>CSS 选择器可以分为<strong>4 类</strong>，即<strong>选择器</strong>、<strong>选择符</strong>、<strong>伪类</strong>和<strong>伪元素</strong>。下面介绍这四种类型的区别。</p><h4 id="i-选择器" tabindex="-1">Ⅰ. 选择器 <a class="header-anchor" href="#i-选择器" aria-label="Permalink to &quot;Ⅰ. 选择器&quot;">​</a></h4><p>选择器，指的是我们平常使用的 <code>css</code> 声明块前面的标签、类名等等。<strong>比如：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#333</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">body</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#333</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>以上代码中的 <code>body</code> 就是一种选择器，是<strong>类型选择器</strong>，也可以称为<strong>标签选择器</strong>。</p><hr><p><strong>再比如：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#fff</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#fff</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>以上代码中的 <code>.container</code> 也是选择器，属于<strong>属性选择器</strong>中的一种，我们也经常称它为<strong>类选择器</strong>。</p><h4 id="ii-选择符" tabindex="-1">Ⅱ. 选择符 <a class="header-anchor" href="#ii-选择符" aria-label="Permalink to &quot;Ⅱ. 选择符&quot;">​</a></h4><p><code>CSS</code> 中有<strong>5 种</strong>选择符，<strong>分别为：</strong></p><table><thead><tr><th style="text-align:center;">选择符</th><th style="text-align:center;">定义</th></tr></thead><tbody><tr><td style="text-align:center;">空格（ ）</td><td style="text-align:center;">表示后代关系</td></tr><tr><td style="text-align:center;">尖括号（&gt;）</td><td style="text-align:center;">表示父子关系</td></tr><tr><td style="text-align:center;">加号（+）</td><td style="text-align:center;">表示相邻兄弟关系</td></tr><tr><td style="text-align:center;">波浪号（~）</td><td style="text-align:center;">表示兄弟关系</td></tr><tr><td style="text-align:center;">双管道（||）</td><td style="text-align:center;">表示列关系</td></tr></tbody></table><p>我们来举些例子，更好的理解这几种选择符。<strong>具体代码如下：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* 后代关系 */</span></span>
<span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">object-fit</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">contain</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 父子关系 */</span></span>
<span class="line"><span style="color:#85E89D;">ol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 相邻兄弟关系 */</span></span>
<span class="line"><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin-right</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 兄弟关系 */</span></span>
<span class="line"><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin-left</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 列 */</span></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">.col||td</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">gray</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 后代关系 */</span></span>
<span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> </span><span style="color:#22863A;">img</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">object-fit</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">contain</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 父子关系 */</span></span>
<span class="line"><span style="color:#22863A;">ol</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#22863A;">li</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 相邻兄弟关系 */</span></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#22863A;">p</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin-right</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 兄弟关系 */</span></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#24292E;"> </span><span style="color:#22863A;">p</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin-left</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 列 */</span></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">.col||td</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">gray</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>这里需要注意的是，相邻兄弟关系和兄弟关系的区别，这两个看起来很相似，很容易混淆。</p><p>对于 <code>+</code> 的相邻关系，指的是当前的 <code>button</code> 以及在它<strong>同一层级上的下一个元素</strong> <code>p</code> 的样式；而对于 <code>~</code> 来说，就是当前 <code>button</code> 以及在它<strong>同一层级上的所有 <code>p</code> 元素</strong>的样式。</p><p>可以说 <code>+</code> 号是<strong>一对一关系</strong>，而 <code>~</code> 则是<strong>一对多关系</strong>。</p><h4 id="iii-伪类" tabindex="-1">Ⅲ. 伪类 <a class="header-anchor" href="#iii-伪类" aria-label="Permalink to &quot;Ⅲ. 伪类&quot;">​</a></h4><p>伪类的特征是其前面会有一个<strong>冒号</strong> <code>:</code> 。对于伪类来说，它通常与<strong>浏览器行为</strong>和<strong>用户行为</strong>相关联，可以把它看成是 <code>css</code> 世界中的 <code>javascript</code> 。<strong>比如：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">a</span><span style="color:#B392F0;">:hover</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">gray</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">a</span><span style="color:#6F42C1;">:hover</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">gray</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="iv-伪元素" tabindex="-1">Ⅳ. 伪元素 <a class="header-anchor" href="#iv-伪元素" aria-label="Permalink to &quot;Ⅳ. 伪元素&quot;">​</a></h4><p>伪元素的特征是其前面会有两个冒号 <code>::</code> ，常见的有 <code>::before</code> 、 <code>::after</code> 、 <code>::first-letter</code> 和 <code>::first-line</code> 等。</p><h3 id="_2-css-选择器的命名空间" tabindex="-1">（2）CSS 选择器的命名空间 <a class="header-anchor" href="#_2-css-选择器的命名空间" aria-label="Permalink to &quot;（2）CSS 选择器的命名空间&quot;">​</a></h3><p><code>CSS</code> 选择器中还有一个<strong>命名空间</strong>的概念。所谓命名空间，就是我们平常所看到的 <code>@namespace</code> ，主要作用是用来<strong>避免冲突</strong>。</p><p>比如说，我们在 <code>html</code> 和 <code>svg</code> 中都会用到 <code>&lt;a&gt;</code> 链接，这个时候就很可能会发生冲突。那问题来了，冲突制造了，又该怎么解决呢？这个时候就可以用刚刚提到的命名空间 <code>@namespace</code> 来解决。</p><p>我们来看一段代码，更直观的了解命名空间。<strong>具体代码如下：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">p</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	这是文字:</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">a</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">点击刷新&lt;/</span><span style="color:#85E89D;">a</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">p</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	这是SVG:</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;"> xlink:href</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;"> d=&quot;M433</span><span style="color:#B392F0;">.109</span><span style="color:#E1E4E8;"> 23</span><span style="color:#B392F0;">.694c</span><span style="color:#E1E4E8;">..</span><span style="color:#FDAEB7;font-style:italic;">.2</span><span style="color:#E1E4E8;">.706z&quot;/</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;/</span><span style="color:#85E89D;">a</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">@namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">url</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">http://w3.org/1999/xhtml</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">@namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">url</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">http://www.w3.org/2000/svg</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">/* 管道符 */</span></span>
<span class="line"><span style="color:#B392F0;">svg</span><span style="color:#E1E4E8;">|</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">black</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">fill</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">currentColor</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* 标签选择器 */</span></span>
<span class="line"><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">gray</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">p</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	这是文字:</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">a</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">点击刷新&lt;/</span><span style="color:#22863A;">a</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">p</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">p</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	这是SVG:</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">svg</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">a</span><span style="color:#24292E;"> xlink:href</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#22863A;">path</span><span style="color:#24292E;"> d=&quot;M433</span><span style="color:#6F42C1;">.109</span><span style="color:#24292E;"> 23</span><span style="color:#6F42C1;">.694c</span><span style="color:#24292E;">..</span><span style="color:#B31D28;font-style:italic;">.2</span><span style="color:#24292E;">.706z&quot;/</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;/</span><span style="color:#22863A;">a</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">p</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">@namespace</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">url</span><span style="color:#24292E;">(</span><span style="color:#E36209;">http://w3.org/1999/xhtml</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">@namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">svg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">url</span><span style="color:#24292E;">(</span><span style="color:#E36209;">http://www.w3.org/2000/svg</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">/* 管道符 */</span></span>
<span class="line"><span style="color:#6F42C1;">svg</span><span style="color:#24292E;">|</span><span style="color:#22863A;">a</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">black</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">fill</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">currentColor</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">/* 标签选择器 */</span></span>
<span class="line"><span style="color:#22863A;">a</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">gray</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>大家可以看到， <code>svg|a</code> 中有一个管道符 <code>|</code> ，那么管道符前面的字符表示的就是<strong>命名空间</strong>的代称，而管道符后面的内容则是<strong>选择器</strong>。这段代码最终的显示效果是这样的：</p><p><img src="https://img-blog.csdnimg.cn/e39ee186c06f4278b742857227cff034.png#pic_center" alt="命名空间"></p><p>如果按照我们预定的，可能有的小伙伴觉得样式不是越靠后优先级越高吗，而为什么 <code>svg</code> 中的 <code>a</code> 还是显示了<strong>黑色</strong>，而不是<strong>灰色</strong>呢？</p><p>其实，大家可以看到上面的命名空间，上述代码中就表示了，在 <code>http://www.w3.org/2000/svg</code> 这个命名空间下所有 <code>&lt;a&gt;</code> 的颜色都是<strong>黑色 <code>black</code></strong> ，且由于 <code>xhtml</code> 的命名空间（大家定位到第一个命名空间）也被指定了。因此呢， <code>svg</code> 中的 <code>&lt;a&gt;</code> 标签也就不会受到 <code>标签选择器a</code> 的影响，即便 <code>纯标签选择器a</code> 的优先级再高，那也是无效的。</p><hr><p>讲到这个，我们来对 <code>css选择器命名空间</code> 做个小结：</p><p>其实， <code>css选择器命名空间</code> 的兼容性很好，至少相似 10 年前浏览器就支持了。但是呢，确很少有人在项目中去使用它。这是为什么呢？</p><p>原因主要有<strong>以下两点：</strong></p><ul><li><p>在 <code>html</code> 中直接内联 <code>svg</code> 的应用场景相对来说还是比较少的，你可以试想一下，我们平常在引用阿里图标的时候，会直接把 svg 那一大串资源，给自己引入到自己的页面中吗？应该没有人这么干吧。所以，它更多的是作为独立资源来使用。</p></li><li><p>还有一个原因就是，有它更好的替代方案。<strong>比如：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">black</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#22863A;">a</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">black</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这样做的唯一缺点就是，增加了 <code>svg</code> 中 <code>a</code> 元素的优先级。但是再大多数的情况下，对我们的开发基本上没什么影响。</p></li></ul><p>所以呢，对于 <code>css</code> 选择器的<strong>命名空间</strong>，大家可以选择了解即可，至少在遇到<strong>大规模冲突</strong>场景下，给自己多一个解决方法~</p><h1 id="😲-二、css-选择器的优先级" tabindex="-1">😲 二、CSS 选择器的优先级 <a class="header-anchor" href="#😲-二、css-选择器的优先级" aria-label="Permalink to &quot;😲 二、CSS 选择器的优先级&quot;">​</a></h1><p>几乎所有的 <code>css</code> 样式冲突、样式覆盖等等问题，都跟 <code>css</code> 声明的优先级错位脱不开关系。接下来，我们将从 <code>css</code> 优先级规则以及优先级的计算为切入点，来了解关于 <code>css</code> 选择器的优先级。</p><h2 id="_1、优先级规则概览" tabindex="-1">1、优先级规则概览 <a class="header-anchor" href="#_1、优先级规则概览" aria-label="Permalink to &quot;1、优先级规则概览&quot;">​</a></h2><h3 id="_1-选择器优先级" tabindex="-1">（1）选择器优先级 <a class="header-anchor" href="#_1-选择器优先级" aria-label="Permalink to &quot;（1）选择器优先级&quot;">​</a></h3><p><code>css</code> 优先级有着明显的不可逾越的等级制度，因此，我们可以将其划分为 <strong>0~5</strong> 这 <strong>6 个等级</strong>。其中，前 4 个等级由 <code>css选择器</code> 决定，后 2 个等级由 <code>书写形式</code> 和 <code>特定语法</code> 决定。 下面来了解这 6 种等级制度各自的区别，<strong>具体如下表：</strong></p><table><thead><tr><th style="text-align:center;">等级</th><th style="text-align:center;">定义</th><th style="text-align:center;">计算值</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>0 级</strong></td><td style="text-align:center;">通配选择器、选择符和逻辑组合伪类</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;"><strong>1 级</strong></td><td style="text-align:center;">标签选择器</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;"><strong>2 级</strong></td><td style="text-align:center;">类选择器、属性选择器和伪类</td><td style="text-align:center;">10</td></tr><tr><td style="text-align:center;"><strong>3 级</strong></td><td style="text-align:center;">ID 选择器</td><td style="text-align:center;">100</td></tr><tr><td style="text-align:center;"><strong>4 级</strong></td><td style="text-align:center;">style 属性内联</td><td style="text-align:center;">1000</td></tr><tr><td style="text-align:center;"><strong>5 级</strong></td><td style="text-align:center;">!important</td><td style="text-align:center;">10000</td></tr></tbody></table><h3 id="_2-选择器说明" tabindex="-1">（2）选择器说明 <a class="header-anchor" href="#_2-选择器说明" aria-label="Permalink to &quot;（2）选择器说明&quot;">​</a></h3><p>继续，我们对这 6 个级别对应的选择器样式来做个简单的了解。<strong>具体如下：</strong></p><p><strong>0 级：通配选择器、选择符和逻辑组合伪类</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* 通配选择器指星号（*） */</span></span>
<span class="line"><span style="color:#85E89D;">*</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#fff</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 选择符指+、&gt;、~、空格和||</span></span>
<span class="line"><span style="color:#6A737D;">   具体上面有做详细说明，不再细述 */</span></span>
<span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 后代关系 */</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">ol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">li</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 父子关系 */</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 相邻兄弟关系 */</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 兄弟关系 */</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FDAEB7;font-style:italic;">.col||td</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 列 */</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 逻辑组合伪类有:not()、:is()和:where()</span></span>
<span class="line"><span style="color:#6A737D;">   需要注意的是，只有逻辑组合伪类的优先级是0，其他伪类的优先级并不是这样的 */</span></span>
<span class="line"><span style="color:#B392F0;">:not</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#fff</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 通配选择器指星号（*） */</span></span>
<span class="line"><span style="color:#22863A;">*</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#fff</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 选择符指+、&gt;、~、空格和||</span></span>
<span class="line"><span style="color:#6A737D;">   具体上面有做详细说明，不再细述 */</span></span>
<span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> </span><span style="color:#22863A;">img</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 后代关系 */</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">ol</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#22863A;">li</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 父子关系 */</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#22863A;">p</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 相邻兄弟关系 */</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#24292E;"> </span><span style="color:#22863A;">p</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 兄弟关系 */</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B31D28;font-style:italic;">.col||td</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 列 */</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 逻辑组合伪类有:not()、:is()和:where()</span></span>
<span class="line"><span style="color:#6A737D;">   需要注意的是，只有逻辑组合伪类的优先级是0，其他伪类的优先级并不是这样的 */</span></span>
<span class="line"><span style="color:#6F42C1;">:not</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#fff</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p><strong>1 级：标签选择器</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* 标签选择器类似于body,p,span,div等等这些标签元素 */</span></span>
<span class="line"><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#333</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 标签选择器类似于body,p,span,div等等这些标签元素 */</span></span>
<span class="line"><span style="color:#22863A;">body</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#333</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>2 级：类选择器、属性选择器和伪类</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* 类选择器指class */</span></span>
<span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#666</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 属性选择器指指针对某个标签里面的属性进行特定标识</span></span>
<span class="line"><span style="color:#6A737D;">   比如以下，表示只对有 href 属性的锚（a 元素）应用样式 */</span></span>
<span class="line"><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">href</span><span style="color:#E1E4E8;">] {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#666</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 伪类指:hover等 */</span></span>
<span class="line"><span style="color:#85E89D;">a</span><span style="color:#B392F0;">:hover</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#666</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 类选择器指class */</span></span>
<span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#666</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 属性选择器指指针对某个标签里面的属性进行特定标识</span></span>
<span class="line"><span style="color:#6A737D;">   比如以下，表示只对有 href 属性的锚（a 元素）应用样式 */</span></span>
<span class="line"><span style="color:#22863A;">a</span><span style="color:#24292E;">[</span><span style="color:#6F42C1;">href</span><span style="color:#24292E;">] {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#666</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* ------------------分割线------------------- */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 伪类指:hover等 */</span></span>
<span class="line"><span style="color:#22863A;">a</span><span style="color:#6F42C1;">:hover</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#666</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><strong>3 级：ID 选择器</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">#container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#999</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">#container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#999</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>4 级：style 属性内联</strong></p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;color: #ccc;&quot;</span><span style="color:#E1E4E8;">&gt; 优先级 &lt;/</span><span style="color:#85E89D;">span</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">span</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;color: #ccc;&quot;</span><span style="color:#24292E;">&gt; 优先级 &lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>5 级：! important</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* !important是顶级优先级，</span></span>
<span class="line"><span style="color:#6A737D;">	可以重置 js 设置的样式，</span></span>
<span class="line"><span style="color:#6A737D;">	唯一推荐使用的场景就是使 js 设置无效（切勿滥用）*/</span></span>
<span class="line"><span style="color:#B392F0;">#container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#999</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!important</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* !important是顶级优先级，</span></span>
<span class="line"><span style="color:#6A737D;">	可以重置 js 设置的样式，</span></span>
<span class="line"><span style="color:#6A737D;">	唯一推荐使用的场景就是使 js 设置无效（切勿滥用）*/</span></span>
<span class="line"><span style="color:#6F42C1;">#container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#999</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!important</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_2、优先级计算" tabindex="-1">2、优先级计算 <a class="header-anchor" href="#_2、优先级计算" aria-label="Permalink to &quot;2、优先级计算&quot;">​</a></h2><p>上面我们了解到了关于 <code>css</code> 选择器的各种玩法，那下面我们就来看一下它是怎么玩的。</p><h3 id="_1-选择器优先级计算" tabindex="-1">（1）选择器优先级计算 <a class="header-anchor" href="#_1-选择器优先级计算" aria-label="Permalink to &quot;（1）选择器优先级计算&quot;">​</a></h3><p>我们用一个表格来罗列处常见的一些计算。当然，大家也可以拿起小本本边看边进行计算。<strong>具体如下表：</strong></p><table><thead><tr><th style="text-align:center;">选择器</th><th style="text-align:center;">计算值</th><th style="text-align:center;">计算细则</th></tr></thead><tbody><tr><td style="text-align:center;">*</td><td style="text-align:center;">0</td><td style="text-align:center;">1 个 0 级通配选择器，优先级数值计算结果为 0</td></tr><tr><td style="text-align:center;">p</td><td style="text-align:center;">1</td><td style="text-align:center;">1 个 1 级通配选择器，计算结果为 1</td></tr><tr><td style="text-align:center;">ul &gt; li</td><td style="text-align:center;">2</td><td style="text-align:center;">2 个 1 级标签选择器，1 个 0 级选择符，计算结果为 1+0+1</td></tr><tr><td style="text-align:center;">li &gt; ol + ol</td><td style="text-align:center;">3</td><td style="text-align:center;">3 个 1 级标签选择器，2 个 0 级选择符，计算结果为 1+0+1+0+1</td></tr><tr><td style="text-align:center;">.foo</td><td style="text-align:center;">10</td><td style="text-align:center;">1 个 2 级类名选择器，计算结果为 10</td></tr><tr><td style="text-align:center;">a:not([rel=nofollow])</td><td style="text-align:center;">11</td><td style="text-align:center;">1 个标签选择器，1 个 0 级否定伪类，1 个 2 级属性选择器，计算结果为 1+0+10</td></tr><tr><td style="text-align:center;">a:hover</td><td style="text-align:center;">11</td><td style="text-align:center;">1 个 1 级标签选择器，1 个 2 级伪类，计算结果为 1+10</td></tr><tr><td style="text-align:center;">ol li.foo</td><td style="text-align:center;">12</td><td style="text-align:center;">2 个 1 级标签选择器，1 个 2 级类名选择器，1 个 0 级空格选择符，计算结果为 1+0+1+10</td></tr><tr><td style="text-align:center;">li.foo.bar</td><td style="text-align:center;">21</td><td style="text-align:center;">1 个 1 级标签选择器，2 个 2 级类名选择器，计算结果为 1+10+10</td></tr><tr><td style="text-align:center;">#foo</td><td style="text-align:center;">100</td><td style="text-align:center;">1 个 3 级 id 选择器，计算结果为 100</td></tr><tr><td style="text-align:center;">#foo .bar p</td><td style="text-align:center;">111</td><td style="text-align:center;">1 个 3 级 id 选择器，1 个 2 级类名选择器，1 个 1 级标签选择器，2 个 0 级空格选择器，计算结果为 100+10+1+0+0</td></tr></tbody></table><h3 id="_2-后来居上-原则" tabindex="-1">（2）“后来居上”原则 <a class="header-anchor" href="#_2-后来居上-原则" aria-label="Permalink to &quot;（2）“后来居上”原则&quot;">​</a></h3><p>还有一种可能会出现的情况就是，遇到计算结果相同的，我们该如何取值呢？<strong>比如：</strong></p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;“zh-CN”&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;foo&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    颜色是</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">body</span><span style="color:#B392F0;">.foo:not</span><span style="color:#E1E4E8;">([</span><span style="color:#B392F0;">dir</span><span style="color:#E1E4E8;">]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">red</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">.foo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">blue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;“zh-CN”&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;foo&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    颜色是</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">body</span><span style="color:#6F42C1;">.foo:not</span><span style="color:#24292E;">([</span><span style="color:#6F42C1;">dir</span><span style="color:#24292E;">]) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">html</span><span style="color:#24292E;">[</span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">.foo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">blue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>我们来分析下以上这段代码。首先，第一段 <code>css</code> 代码中，出现 1 个标签选择器 <code>body</code> ，1 个类名选择器 <code>.foo</code> 和 1 个否定伪类 <code>:not</code> ，以及 1 个属性选择器 <code>[dir]</code> 。因此计算结果为 <code>1+10+0+10</code> ，也就是 <code>21</code> 。</p><p>我们再来分析第二段代码， <code>html[lang] &gt; .foo</code> 中出现 1 个标签选择器 <code>html</code> ，1 个属性选择器 <code>[lang]</code> ，1 个类名选择器 <code>.foo</code> ，这里 <code>0级选择器</code> 忽略不计。因此，最终计算结果为 <code>1+10+10=21</code> 。</p><p>所以，大家可以看到，两个最终的计算结果都是 <code>21</code> 。那我们到底用哪个样式呢？</p>`,83),E=n(`<h3 id="_3-提升优先级的小技巧" tabindex="-1">（3）提升优先级的小技巧 <a class="header-anchor" href="#_3-提升优先级的小技巧" aria-label="Permalink to &quot;（3）提升优先级的小技巧&quot;">​</a></h3><p>在实际开发中，我们难免会遇到需要增加 <code>css</code> 选择器优先级的场景。殊不知很多小伙伴可能直接就把内联和 <code>!important</code> 直接怼上去了，这样子造成的后果可能有点恐怖了。</p><p>所以，我们需要来了解几种增加选择器权重的做法。<strong>具体如下：</strong></p><p>假设现在我要给下面这段代码<strong>增加权重</strong>，<strong>例如：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.foo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#333</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.foo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#333</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>很多时候我们的做法可能是<strong>增加嵌套</strong>或者是<strong>增加一个标签选择器</strong>，<strong>例如：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* 增加嵌套 */</span></span>
<span class="line"><span style="color:#B392F0;">.father</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">.foo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 增加标签选择器 */</span></span>
<span class="line"><span style="color:#85E89D;">div</span><span style="color:#B392F0;">.foo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 增加嵌套 */</span></span>
<span class="line"><span style="color:#6F42C1;">.father</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">.foo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/* 增加标签选择器 */</span></span>
<span class="line"><span style="color:#22863A;">div</span><span style="color:#6F42C1;">.foo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>但是这种做法往往不是最好的，因为它会增加了代码的耦合度，降低代码的可维护性。试想一下，一旦类名变了，或者标签换了，那你的样式岂不是就要往回去改了，这样会不会就有点不太友好了。</p><hr><p>所以，我们引出一下两种方式，来解决这个问题。<strong>具体如下：</strong></p><p><strong>第一种：</strong> 重复选择器自身</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.foo.foo</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.foo.foo</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>第二种：</strong> 借助已存在的属性选择器</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.foo</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">] {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">#foo</span><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">] {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.foo</span><span style="color:#24292E;">[</span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">] {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">#foo</span><span style="color:#24292E;">[</span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">] {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这样看起来，会不会就友好了许多呢。</p><h1 id="🥳-三、结束语" tabindex="-1">🥳 三、结束语 <a class="header-anchor" href="#🥳-三、结束语" aria-label="Permalink to &quot;🥳 三、结束语&quot;">​</a></h1><p>在上文中，我们讲到关于 <code>css</code> 选择器的一些基础知识，以及 <code>css</code> 选择器的优先级的各种计算方式，还有关于“后来居上”原则和一些提升优先级的小 tips。</p><p>讲到这里，关于 <code>css</code> 选择器优先级的讲解就结束啦！希望对大家有帮助~</p><h1 id="🐣-彩蛋-one-more-thing" tabindex="-1">🐣 彩蛋 One More Thing <a class="header-anchor" href="#🐣-彩蛋-one-more-thing" aria-label="Permalink to &quot;🐣 彩蛋 One More Thing&quot;">​</a></h1><h2 id="🏷️-往期推荐-参考资料" tabindex="-1">🏷️ 往期推荐&amp;参考资料 <a class="header-anchor" href="#🏷️-往期推荐-参考资料" aria-label="Permalink to &quot;🏷️ 往期推荐&amp;参考资料&quot;">​</a></h2><p>position 和 z-index👉<a href="https://blog.csdn.net/weixin_44803753/article/details/119154210" target="_blank" rel="noreferrer">你可能对 position 和 z-index 有一些误解</a></p><p>书籍 👉 张鑫旭老师的《CSS 选择器世界》</p>`,22);function d(b,g,u,h,m,F){const a=p("font");return e(),o("div",null,[y,t("p",null,[s("印证标题所说的，遵循**“后来居上”原则**， 最终这段代码显示为"),c(a,{color:"blue"},{default:r(()=>[s("蓝色")]),_:1}),s("。")]),E])}const D=l(i,[["render",d]]);export{v as __pageData,D as default};
