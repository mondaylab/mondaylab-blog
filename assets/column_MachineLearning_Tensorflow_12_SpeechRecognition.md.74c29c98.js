import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.98c15f2e.js";const b=JSON.parse('{"title":"使用预训练模型进行语音识别","description":"","frontmatter":{"title":"使用预训练模型进行语音识别","author":"周一","date":"2023-08-05","categories":["人工智能"],"tags":["机器学习"],"sidebar":"auto"},"headers":[{"level":1,"title":"一、任务简介","slug":"一、任务简介","link":"#一、任务简介","children":[{"level":2,"title":"1、什么是语音识别","slug":"_1、什么是语音识别","link":"#_1、什么是语音识别","children":[]},{"level":2,"title":"2、操作步骤","slug":"_2、操作步骤","link":"#_2、操作步骤","children":[]}]},{"level":1,"title":"二、加载预训练语音识别模型","slug":"二、加载预训练语音识别模型","link":"#二、加载预训练语音识别模型","children":[{"level":2,"title":"1、操作步骤","slug":"_1、操作步骤","link":"#_1、操作步骤","children":[]},{"level":2,"title":"2、训练过程","slug":"_2、训练过程","link":"#_2、训练过程","children":[{"level":3,"title":"（1）准备数据","slug":"_1-准备数据","link":"#_1-准备数据","children":[]},{"level":3,"title":"（2）加载模型","slug":"_2-加载模型","link":"#_2-加载模型","children":[]}]}]},{"level":1,"title":"三、进行语音识别","slug":"三、进行语音识别","link":"#三、进行语音识别","children":[{"level":2,"title":"1、操作步骤","slug":"_1、操作步骤-1","link":"#_1、操作步骤-1","children":[]},{"level":2,"title":"2、训练过程","slug":"_2、训练过程-1","link":"#_2、训练过程-1","children":[]}]}],"relativePath":"column/MachineLearning/Tensorflow/12_SpeechRecognition.md","filePath":"column/MachineLearning/Tensorflow/12_SpeechRecognition.md","lastUpdated":1720881464000}'),p={name:"column/MachineLearning/Tensorflow/12_SpeechRecognition.md"},o=l(`<h1 id="一、任务简介" tabindex="-1">一、任务简介 <a class="header-anchor" href="#一、任务简介" aria-label="Permalink to &quot;一、任务简介&quot;">​</a></h1><h2 id="_1、什么是语音识别" tabindex="-1">1、什么是语音识别 <a class="header-anchor" href="#_1、什么是语音识别" aria-label="Permalink to &quot;1、什么是语音识别&quot;">​</a></h2><ul><li>语音识别在生活中非常常见，比如说讯飞语音输入法，还有苹果的 Siri 等等。</li><li>语音识别其实就是模型<strong>接受声音信息</strong>，然后<strong>输出分类信息</strong>。</li><li>为什么是输出分类信息呢？其实语音识别的本质也是一种分类，比如你给模型一段声音，它帮你分辨出这是哪几个单词。所以说我们这次任务所说的语音识别，其实就是声音分类或者语音分类。</li><li>那声音分类是怎么实现的呢？其实，声音在计算机里是<strong>声谱图</strong>，我们经常会看到计算机里各种音频可视化的一些样子，也就是一种<strong>图像</strong>。因此，既然是图像，那么其实声音的识别也可以使用卷积神经网络，因为卷积神经网络的本质就是<strong>处理图像</strong>。</li></ul><h2 id="_2、操作步骤" tabindex="-1">2、操作步骤 <a class="header-anchor" href="#_2、操作步骤" aria-label="Permalink to &quot;2、操作步骤&quot;">​</a></h2><ul><li><strong>加载预训练语音识别模型</strong> —— 这个预训练模型是<code>Tensorflow</code>官方的一个模型，他们建立了一个<strong>语音命令数据集</strong>，这个数据集只有很有限的几个单词。然后官方使用 <code>Python</code> 版的 <code>Tensorflow</code> 训练了很长很长时间，准确度训练的很高，最后转化为了我们 <code>Tensorflow. js</code> 可以加载的模型格式，而我们要加载的就是 <code>Tensorflow.js</code> 使用的<strong>模型格式</strong>。</li><li><strong>进行语音识别</strong> —— 使用<code>Tensorflow.js</code>官方的一个<strong>语音命令包</strong>，它里面封装了一些操作，然后我们直接调用这个包就可以进行模型加载以及语音识别的相关操作了。</li></ul><h1 id="二、加载预训练语音识别模型" tabindex="-1">二、加载预训练语音识别模型 <a class="header-anchor" href="#二、加载预训练语音识别模型" aria-label="Permalink to &quot;二、加载预训练语音识别模型&quot;">​</a></h1><h2 id="_1、操作步骤" tabindex="-1">1、操作步骤 <a class="header-anchor" href="#_1、操作步骤" aria-label="Permalink to &quot;1、操作步骤&quot;">​</a></h2><ul><li>下载语音识别模型文件</li><li>在本地开启静态文件服务器</li><li>使用<code>tfjs-models</code>的<code>speech-commands</code>包加载模型 —— <code>tfjs-models</code>是<code>Tensorflow</code>官方的一个模型库，里面有各种各样的模型，与此同时，这些模型库已经帮助我们写好了<strong>模型加载以及预测</strong>相关的<code>TFJS</code>的代码。</li></ul><h2 id="_2、训练过程" tabindex="-1">2、训练过程 <a class="header-anchor" href="#_2、训练过程" aria-label="Permalink to &quot;2、训练过程&quot;">​</a></h2><h3 id="_1-准备数据" tabindex="-1">（1）准备数据 <a class="header-anchor" href="#_1-准备数据" aria-label="Permalink to &quot;（1）准备数据&quot;">​</a></h3><p>首先创建文件夹<code>data/speech</code>，然后在<code>speech</code>下，存放这些内容。<strong>如下图所示：</strong></p><p><img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202407132158697.png" alt="img"></p><p>其中，<code>group1</code>开头的是<strong>两个权重文件</strong>，<code>metadata.json</code>是元信息的<code>json</code>，<code>model.json</code>是模型的<code>json</code>。</p><p>下面附上数据文件👇🏻：</p><p>暂时无法在飞书文档外展示此内容</p><h3 id="_2-加载模型" tabindex="-1">（2）加载模型 <a class="header-anchor" href="#_2-加载模型" aria-label="Permalink to &quot;（2）加载模型&quot;">​</a></h3><p>接着，根目录创建一个新的文件夹<code>speech</code>，然后在这个文件夹下面创建两个文件，分别为<code>index.html</code>和<code>script.js</code>。</p><p><code>index.html</code>代码如下：</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;script.js&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;script.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>script.js</code>代码如下：</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> speechCommands </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@tensorflow-models/speech-commands&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">MODEL_PATH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://127.0.0.1:8080/speech&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">onload</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 加载预训练语音识别模型</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">recognizer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> speechCommands.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;BROWSER_FFT&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 傅里叶的变换，这里选择浏览器自带的原生的傅里叶</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 初始化要识别的单词</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">MODEL_PATH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/model.json&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 自带的模型URL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">MODEL_PATH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/metadata.json&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 自定义元信息的url</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 确保模型加载，调用模型的ensureModelLoaded（可以在浏览器的network里面看到）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> recognizer.</span><span style="color:#B392F0;">ensureModelLoaded</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> speechCommands </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@tensorflow-models/speech-commands&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MODEL_PATH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://127.0.0.1:8080/speech&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">onload</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 加载预训练语音识别模型</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">recognizer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> speechCommands.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;BROWSER_FFT&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 傅里叶的变换，这里选择浏览器自带的原生的傅里叶</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 初始化要识别的单词</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">MODEL_PATH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/model.json&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 自带的模型URL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">MODEL_PATH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/metadata.json&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 自定义元信息的url</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 确保模型加载，调用模型的ensureModelLoaded（可以在浏览器的network里面看到）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> recognizer.</span><span style="color:#6F42C1;">ensureModelLoaded</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>至此，我们就完成了模型加载！</p><h1 id="三、进行语音识别" tabindex="-1">三、进行语音识别 <a class="header-anchor" href="#三、进行语音识别" aria-label="Permalink to &quot;三、进行语音识别&quot;">​</a></h1><h2 id="_1、操作步骤-1" tabindex="-1">1、操作步骤 <a class="header-anchor" href="#_1、操作步骤-1" aria-label="Permalink to &quot;1、操作步骤&quot;">​</a></h2><ul><li><strong>从浏览器监听麦克风输入</strong> —— 语音命令包已经帮我们实现好了相关的功能，我们只需要调用语音命令的listen方法，即可完成此项操作。</li><li><strong>进行语音识别</strong> —— 对着电脑的麦克风说几个单词，让电脑来识别出具体所说的话。</li><li><strong>显示语音识别结果</strong> —— 编写相应的前端界面，来显示最后的结果</li></ul><h2 id="_2、训练过程-1" tabindex="-1">2、训练过程 <a class="header-anchor" href="#_2、训练过程-1" aria-label="Permalink to &quot;2、训练过程&quot;">​</a></h2><p>继续完善上面的代码，首先是<code>index.html</code>的代码：</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;script.js&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    #result&gt;div {</span></span>
<span class="line"><span style="color:#E1E4E8;">        float: left;</span></span>
<span class="line"><span style="color:#E1E4E8;">        padding: 20px;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;result&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;script.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    #result&gt;div {</span></span>
<span class="line"><span style="color:#24292E;">        float: left;</span></span>
<span class="line"><span style="color:#24292E;">        padding: 20px;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;result&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>接着是<code>script.js</code>的代码：</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> speechCommands </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@tensorflow-models/speech-commands&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">MODEL_PATH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://127.0.0.1:8080/speech&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">onload</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 加载预训练语音识别模型</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">recognizer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> speechCommands.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;BROWSER_FFT&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 傅里叶的变换，这里选择浏览器自带的原生的傅里叶</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 初始化要识别的单词</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">MODEL_PATH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/model.json&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 自带的模型URL</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">MODEL_PATH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/metadata.json&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 自定义元信息的url</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 确保模型加载，调用模型的ensureModelLoaded（可以在浏览器的network里面看到）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> recognizer.</span><span style="color:#B392F0;">ensureModelLoaded</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 进行语音识别</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// wordLabels 识别器里面所预置的能识别的一些单词</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">labels</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> recognizer.</span><span style="color:#B392F0;">wordLabels</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 获取html里面的dom元素</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultEl</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#result&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  resultEl.innerHTML </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> labels</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      (</span><span style="color:#FFAB70;">l</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;div&gt;\${</span><span style="color:#E1E4E8;">l</span><span style="color:#9ECBFF;">}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    \`</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  recognizer.</span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">scores</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">maxValue</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">scores); </span><span style="color:#6A737D;">// 取出scores的最大值</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scores.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(maxValue) </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 取出语音后输出的值，前面截取掉了2个，这个也相应要减掉2个</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 语音说出哪个单词，哪个单词就变绿</span></span>
<span class="line"><span style="color:#E1E4E8;">      resultEl.innerHTML </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> labels</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          (</span><span style="color:#FFAB70;">l</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">i</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#9ECBFF;">        &lt;div style=&quot;background: \${</span><span style="color:#E1E4E8;">i</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">===</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">index</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#9ECBFF;"> </span><span style="color:#9ECBFF;">&#39;green&#39;}&quot;&gt;\${</span><span style="color:#E1E4E8;">l</span><span style="color:#9ECBFF;">}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">        \`</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      overlapFactor: </span><span style="color:#79B8FF;">0.3</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 控制语音识别的频率</span></span>
<span class="line"><span style="color:#E1E4E8;">      probabilityThreshold: </span><span style="color:#79B8FF;">0.9</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 配置可能性的阈值（比如说，我说的单词跟模型训练的单词得有90%的相似度，模型才会运行）</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  );</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> speechCommands </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@tensorflow-models/speech-commands&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MODEL_PATH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://127.0.0.1:8080/speech&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">onload</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 加载预训练语音识别模型</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">recognizer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> speechCommands.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;BROWSER_FFT&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 傅里叶的变换，这里选择浏览器自带的原生的傅里叶</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 初始化要识别的单词</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">MODEL_PATH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/model.json&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 自带的模型URL</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">MODEL_PATH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/metadata.json&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 自定义元信息的url</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 确保模型加载，调用模型的ensureModelLoaded（可以在浏览器的network里面看到）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> recognizer.</span><span style="color:#6F42C1;">ensureModelLoaded</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 进行语音识别</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// wordLabels 识别器里面所预置的能识别的一些单词</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">labels</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> recognizer.</span><span style="color:#6F42C1;">wordLabels</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 获取html里面的dom元素</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultEl</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#result&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  resultEl.innerHTML </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> labels</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      (</span><span style="color:#E36209;">l</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#032F62;">        &lt;div&gt;\${</span><span style="color:#24292E;">l</span><span style="color:#032F62;">}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#032F62;">    \`</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  recognizer.</span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#E36209;">result</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">scores</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">maxValue</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">scores); </span><span style="color:#6A737D;">// 取出scores的最大值</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scores.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(maxValue) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 取出语音后输出的值，前面截取掉了2个，这个也相应要减掉2个</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 语音说出哪个单词，哪个单词就变绿</span></span>
<span class="line"><span style="color:#24292E;">      resultEl.innerHTML </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> labels</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">          (</span><span style="color:#E36209;">l</span><span style="color:#24292E;">, </span><span style="color:#E36209;">i</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#032F62;">        &lt;div style=&quot;background: \${</span><span style="color:#24292E;">i</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">===</span><span style="color:#032F62;"> </span><span style="color:#24292E;">index</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#032F62;"> </span><span style="color:#032F62;">&#39;green&#39;}&quot;&gt;\${</span><span style="color:#24292E;">l</span><span style="color:#032F62;">}&lt;/div&gt;</span></span>
<span class="line"><span style="color:#032F62;">        \`</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      overlapFactor: </span><span style="color:#005CC5;">0.3</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 控制语音识别的频率</span></span>
<span class="line"><span style="color:#24292E;">      probabilityThreshold: </span><span style="color:#005CC5;">0.9</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 配置可能性的阈值（比如说，我说的单词跟模型训练的单词得有90%的相似度，模型才会运行）</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  );</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><p>最后我们来浏览器看下识别效果：</p><p><img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202407132158097.gif" alt="img"></p><p>这是一张动图不是MP4哈哈，可以想象为小编向浏览器说了对应的字母，然后它变绿了👻。</p>`,33),e=[o];function c(r,t,E,y,i,d){return n(),a("div",null,e)}const u=s(p,[["render",c]]);export{b as __pageData,u as default};
