import{_ as s,c as n,o as a,N as l}from"./chunks/framework.6510d215.js";const A=JSON.parse('{"title":"一文了解树在前端中的应用，掌握数据结构中树的生命线","description":"","frontmatter":{"title":"一文了解树在前端中的应用，掌握数据结构中树的生命线","author":"周一","date":"2021-07-20","categories":["前端开发"],"tags":["数构与前端"],"sidebar":"auto"},"headers":[{"level":1,"title":"🏕️ 序言","slug":"🏕️-序言","link":"#🏕️-序言","children":[]},{"level":1,"title":"🌲 一、树是什么？","slug":"🌲-一、树是什么","link":"#🌲-一、树是什么","children":[]},{"level":1,"title":"🌴 二、深/广度优先遍历","slug":"🌴-二、深-广度优先遍历","link":"#🌴-二、深-广度优先遍历","children":[{"level":2,"title":"1、深度优先遍历","slug":"_1、深度优先遍历","link":"#_1、深度优先遍历","children":[{"level":3,"title":"（1）定义","slug":"_1-定义","link":"#_1-定义","children":[]},{"level":3,"title":"（2）口诀","slug":"_2-口诀","link":"#_2-口诀","children":[]},{"level":3,"title":"（3）代码实现","slug":"_3-代码实现","link":"#_3-代码实现","children":[]}]},{"level":2,"title":"2、广度优先遍历","slug":"_2、广度优先遍历","link":"#_2、广度优先遍历","children":[{"level":3,"title":"（1）定义","slug":"_1-定义-1","link":"#_1-定义-1","children":[]},{"level":3,"title":"（2）口诀","slug":"_2-口诀-1","link":"#_2-口诀-1","children":[]},{"level":3,"title":"（3）代码实现","slug":"_3-代码实现-1","link":"#_3-代码实现-1","children":[]}]}]},{"level":1,"title":"🌱 三、二叉树","slug":"🌱-三、二叉树","link":"#🌱-三、二叉树","children":[{"level":2,"title":"1、定义","slug":"_1、定义","link":"#_1、定义","children":[]},{"level":2,"title":"2、二叉树的先/中/后序遍历","slug":"_2、二叉树的先-中-后序遍历","link":"#_2、二叉树的先-中-后序遍历","children":[{"level":3,"title":"（1）先序遍历","slug":"_1-先序遍历","link":"#_1-先序遍历","children":[]},{"level":3,"title":"（2）中序遍历","slug":"_2-中序遍历","link":"#_2-中序遍历","children":[]},{"level":3,"title":"（3）后序遍历","slug":"_3-后序遍历","link":"#_3-后序遍历","children":[]}]},{"level":2,"title":"3、JS 实现先中后序三种遍历","slug":"_3、js-实现先中后序三种遍历","link":"#_3、js-实现先中后序三种遍历","children":[{"level":3,"title":"（1）JS 实现二叉树的先序遍历","slug":"_1-js-实现二叉树的先序遍历","link":"#_1-js-实现二叉树的先序遍历","children":[]},{"level":3,"title":"（2）JS 实现二叉树的中序遍历","slug":"_2-js-实现二叉树的中序遍历","link":"#_2-js-实现二叉树的中序遍历","children":[]},{"level":3,"title":"（3）JS 实现二叉树的后序遍历","slug":"_3-js-实现二叉树的后序遍历","link":"#_3-js-实现二叉树的后序遍历","children":[]},{"level":3,"title":"（4）总结","slug":"_4-总结","link":"#_4-总结","children":[]}]}]},{"level":1,"title":"☘️ 四、leetcode 经典题目剖析","slug":"☘️-四、leetcode-经典题目剖析","link":"#☘️-四、leetcode-经典题目剖析","children":[{"level":2,"title":"1、leetcode104 二叉树的最大深度（简单）","slug":"_1、leetcode104-二叉树的最大深度-简单","link":"#_1、leetcode104-二叉树的最大深度-简单","children":[]},{"level":2,"title":"2、leetcode111 二叉树的最小深度（简单）","slug":"_2、leetcode111-二叉树的最小深度-简单","link":"#_2、leetcode111-二叉树的最小深度-简单","children":[]},{"level":2,"title":"3、leetcode102 二叉树的层序遍历（中等）","slug":"_3、leetcode102-二叉树的层序遍历-中等","link":"#_3、leetcode102-二叉树的层序遍历-中等","children":[]},{"level":2,"title":"4、leetcode94 二叉树的中序遍历（简单）","slug":"_4、leetcode94-二叉树的中序遍历-简单","link":"#_4、leetcode94-二叉树的中序遍历-简单","children":[]},{"level":2,"title":"5、leetcode112 路径总和（简单）","slug":"_5、leetcode112-路径总和-简单","link":"#_5、leetcode112-路径总和-简单","children":[]},{"level":2,"title":"6、leetcode129 求根节点到叶节点数字之和（中等）","slug":"_6、leetcode129-求根节点到叶节点数字之和-中等","link":"#_6、leetcode129-求根节点到叶节点数字之和-中等","children":[]}]},{"level":1,"title":"🎄 五、前端与树：遍历 JSON 的所有节点值","slug":"🎄-五、前端与树-遍历-json-的所有节点值","link":"#🎄-五、前端与树-遍历-json-的所有节点值","children":[{"level":2,"title":"1、碎碎念","slug":"_1、碎碎念","link":"#_1、碎碎念","children":[]},{"level":2,"title":"2、代码实现","slug":"_2、代码实现","link":"#_2、代码实现","children":[{"level":3,"title":"（1）制造数据","slug":"_1-制造数据","link":"#_1-制造数据","children":[]},{"level":3,"title":"（2）遍历节点值","slug":"_2-遍历节点值","link":"#_2-遍历节点值","children":[]},{"level":3,"title":"（3）打印结果","slug":"_3-打印结果","link":"#_3-打印结果","children":[]}]}]},{"level":1,"title":"🏡 六、结束语","slug":"🏡-六、结束语","link":"#🏡-六、结束语","children":[]},{"level":1,"title":"🐣 彩蛋 One More Thing","slug":"🐣-彩蛋-one-more-thing","link":"#🐣-彩蛋-one-more-thing","children":[{"level":2,"title":"(:往期推荐","slug":"往期推荐","link":"#往期推荐","children":[]},{"level":2,"title":"(:番外篇","slug":"番外篇","link":"#番外篇","children":[]}]}],"relativePath":"column/Algorithm/005_Tree.md","lastUpdated":1681529906000}'),p={name:"column/Algorithm/005_Tree.md"},o=l("",178),e=[o];function r(t,c,y,F,D,i){return a(),n("div",null,e)}const b=s(p,[["render",r]]);export{A as __pageData,b as default};
