import{_ as e,c as a,o as l,N as n}from"./chunks/framework.6510d215.js";const g=JSON.parse('{"title":"如何将nodejs项目程序部署到阿里云服务器上","description":"","frontmatter":{"title":"如何将nodejs项目程序部署到阿里云服务器上","author":"周一","date":"2021-11-21","categories":["服务端开发"],"tags":["Node.js"],"sidebar":"auto"},"headers":[{"level":1,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":1,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":1,"title":"二、具体步骤","slug":"二、具体步骤","link":"#二、具体步骤","children":[{"level":2,"title":"1、拥有自己的服务器","slug":"_1、拥有自己的服务器","link":"#_1、拥有自己的服务器","children":[]},{"level":2,"title":"2、下载 Xshell","slug":"_2、下载-xshell","link":"#_2、下载-xshell","children":[]},{"level":2,"title":"3、 oneinstack 配置 web 环境","slug":"_3、-oneinstack-配置-web-环境","link":"#_3、-oneinstack-配置-web-环境","children":[]},{"level":2,"title":"4、 XShell 连接远程主机","slug":"_4、-xshell-连接远程主机","link":"#_4、-xshell-连接远程主机","children":[]},{"level":2,"title":"5、更新系统软件","slug":"_5、更新系统软件","link":"#_5、更新系统软件","children":[]},{"level":2,"title":"6、在服务器上安装 node 环境","slug":"_6、在服务器上安装-node-环境","link":"#_6、在服务器上安装-node-环境","children":[]},{"level":2,"title":"7、部署项目到服务器上","slug":"_7、部署项目到服务器上","link":"#_7、部署项目到服务器上","children":[]},{"level":2,"title":"8、安装 pm2 并启动 nodejs 项目","slug":"_8、安装-pm2-并启动-nodejs-项目","link":"#_8、安装-pm2-并启动-nodejs-项目","children":[]}]},{"level":1,"title":"三、快捷指令","slug":"三、快捷指令","link":"#三、快捷指令","children":[{"level":2,"title":"1、linux 的常用命令","slug":"_1、linux-的常用命令","link":"#_1、linux-的常用命令","children":[]},{"level":2,"title":"2、pm2 的常用命令","slug":"_2、pm2-的常用命令","link":"#_2、pm2-的常用命令","children":[]}]}],"relativePath":"column/BackEnd/Node/001.md","lastUpdated":1644826256000}'),s={name:"column/BackEnd/Node/001.md"},o=n(`<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>平常做完项目都很少自己部署，但是感觉作为一个开发者不会部署有点过不去，于是询问了身边的小伙伴一波，做出以下总结。</p><h1 id="一、概述" tabindex="-1">一、概述 <a class="header-anchor" href="#一、概述" aria-label="Permalink to &quot;一、概述&quot;">​</a></h1><p><strong>本文将从以下三个个方面来讲解：</strong> 配置 oneinstack 将 nodejs 项目上传至服务器 使用 pm2 运行 nodejs 项目</p><h1 id="二、具体步骤" tabindex="-1">二、具体步骤 <a class="header-anchor" href="#二、具体步骤" aria-label="Permalink to &quot;二、具体步骤&quot;">​</a></h1><h2 id="_1、拥有自己的服务器" tabindex="-1">1、拥有自己的服务器 <a class="header-anchor" href="#_1、拥有自己的服务器" aria-label="Permalink to &quot;1、拥有自己的服务器&quot;">​</a></h2><p>先到阿里云买一台学生机，买完以后记得到控制台重置密码，密码设置的尽可能的复杂；</p><h2 id="_2、下载-xshell" tabindex="-1">2、下载 Xshell <a class="header-anchor" href="#_2、下载-xshell" aria-label="Permalink to &quot;2、下载 Xshell&quot;">​</a></h2><p>之后需要到 Xshell 官方网站下载<a href="https://www.netsarang.com/en/xshell-download/" target="_blank" rel="noreferrer">XShell</a>；</p><h2 id="_3、-oneinstack-配置-web-环境" tabindex="-1">3、 oneinstack 配置 web 环境 <a class="header-anchor" href="#_3、-oneinstack-配置-web-环境" aria-label="Permalink to &quot;3、 oneinstack 配置 web 环境&quot;">​</a></h2><p>用<a href="https://oneinstack.com/auto/" target="_blank" rel="noreferrer">oneinstack</a>配 web 环境，具体配置如下： <img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202304081950789.png" alt="在这里插入图片描述"></p><h2 id="_4、-xshell-连接远程主机" tabindex="-1">4、 XShell 连接远程主机 <a class="header-anchor" href="#_4、-xshell-连接远程主机" aria-label="Permalink to &quot;4、 XShell 连接远程主机&quot;">​</a></h2><p>配置完以后，XShell 连接远程主机； <img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202304081951275.png" alt="在这里插入图片描述"></p><p><img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202304081951409.png" alt="在这里插入图片描述"></p><h2 id="_5、更新系统软件" tabindex="-1">5、更新系统软件 <a class="header-anchor" href="#_5、更新系统软件" aria-label="Permalink to &quot;5、更新系统软件&quot;">​</a></h2><p>连接完成之后， <code>XShell</code> 控制台上的小红点会变成小绿点，显示小绿点即表示连接成功，如果还是小红点则说明连接失败，需重返检查下原来的配置是否有错误，及时纠正。 成功连接后， <code>XShell</code> 控制台输入<code>yum update -y</code>来更新系统软件，更新完成之后，将第三步 <code>oneinstack</code> 最底部生成的安装命令粘贴继续粘贴进控制台，稍等片刻，将完成重置和登录。</p><h2 id="_6、在服务器上安装-node-环境" tabindex="-1">6、在服务器上安装 node 环境 <a class="header-anchor" href="#_6、在服务器上安装-node-环境" aria-label="Permalink to &quot;6、在服务器上安装 node 环境&quot;">​</a></h2><p>登录之后，我们需要在服务器安装一个 node 环境。这里需要注意的一点是，如果需求没有很大的话，用命令<code>yum install -y nodejs</code>在 <code>XShell</code> 控制台即可直接安装，但是 <code>XShell</code> 里面的版本是在比较低，比如我安装的时候是 <code>10.21.0</code> ，实际上 <code>node</code> 已经出到 14 版本了，所以建议是手动安装。接下来讲解在服务器手动安装最新版本 nodejs 环境的做法：</p><p><strong>①</strong>首先需要在本地下载 nodejs 最新版本，在<a href="https://nodejs.org/en/download/" target="_blank" rel="noreferrer">node 官网</a>下载服务器能够运行的版本，因为我的是 centOS 系统，选择 linux Binaries(x64)。</p><p><strong>PS</strong> ：不要像我一样傻以为是在本地安装一个 <code>node</code> 环境，本地的 <code>node</code> 环境和远程的 <code>node</code> 环境完全不是同一个东西。</p><p><img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202304081950545.png" alt="在这里插入图片描述"></p><hr><p><strong>②</strong>在本地下载完成后，需要将安装包（即压缩包文件）复制到服务器里面，如何复制呢，这个根据个人需求传到服务器对应的路径下。（ <code>windows</code> 系统推荐使用<strong>winscp 软件</strong>或者<strong>Xftp 软件</strong>进行上传，速度很快）</p><p><strong>③</strong>上传后，在服务端进行解压，这里需要用命令行在 XShell 里面进行解压。（注意：node-v14.15.4-linux-x64.tar.xz 是你 node 安装包的名字） 解压思路是：需要先将 xz 文件解压成 tar 文件，之后将 tar 文件解压成文件夹完成解压</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">xz</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node-v14.</span><span style="color:#F78C6C;">15.4</span><span style="color:#C3E88D;">-linux-x64.tar.xz</span></span>
<span class="line"><span style="color:#FFCB6B;">tar</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-xvf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node-v14.</span><span style="color:#F78C6C;">15.4</span><span style="color:#C3E88D;">-linux-x64.tar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>④</strong>解压后，将 node 文件夹下的所有内容复制到/usr/local/node，配置环境变量。这里路径/usr/local/node 下的 node 文件需要新建，用<code>mkdir -p 路径名</code>可以直接建立路径下的文件夹。</p><p><strong>⑤</strong>配置环境变量。linux 的环境变量文件是/etc/profile，可执行文件在/usr/local/node/bin 里，所以要把这个路径加入到这个环境变量文件中。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/profile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>输入命令后进入界面，再输入 i 进入编辑模式，PageDown 到最后一行，不换行，添加环境变量。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/node/bin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>⑥</strong>保存退出。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ESC</span></span>
<span class="line"><span style="color:#FFCB6B;">Shift</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zz</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>⑦ 保存退出后执行如下命令，将环境变量生效。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/etc/profile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>⑧</strong>装完之后<code>node -v</code>查看版本号是否一一对应。</p><h2 id="_7、部署项目到服务器上" tabindex="-1">7、部署项目到服务器上 <a class="header-anchor" href="#_7、部署项目到服务器上" aria-label="Permalink to &quot;7、部署项目到服务器上&quot;">​</a></h2><p>安装完 <code>node</code> 环境，接下来需要把我们的项目部署到服务器上。（这里介绍从 <code>git</code> 上拉项目到服务器上） ① 先到 <code>/home</code> 下面创建一个属于你自己用户名的文件夹，比如名字为 <code>monday</code> ，那么就会有 <code>/home/monday</code> ，之后把自己的项目文件克隆到 monday 文件下，为 <code>/home/monday/project-name</code> 。 ② 进入自己用户名的文件夹，<code>git clone</code> 你的项目地址，之后 <code>npm i</code> 。 ③ 上传 <code>nodejs</code> 项目后，配置数据库。</p><h2 id="_8、安装-pm2-并启动-nodejs-项目" tabindex="-1">8、安装 pm2 并启动 nodejs 项目 <a class="header-anchor" href="#_8、安装-pm2-并启动-nodejs-项目" aria-label="Permalink to &quot;8、安装 pm2 并启动 nodejs 项目&quot;">​</a></h2><p><strong>①</strong>使用 npm 全局安装 pm2：<code>npm install pm2 -g</code>； <strong>②</strong>进入 nodejs 项目目录，我把项目上传到了 <code>/home/monday/project-name</code> ，所以,输入<code>cd /home/monday/project-name</code> 的项目目录回车，进入项目目录启动 nodejs 项目，看个人对自己项目的设计来决定启动方式，我的是<code>npm run prd</code>； <strong>③</strong>检查 nodejs 项目是否启动：输入 pm2 list 回车，如果出现下面的列表，就说明 <code>nodejs</code> 项目已经顺利在后台建立了服务。 <img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202304081949728.png" alt=""> 至此，我们就把服务启动起来啦！</p><h1 id="三、快捷指令" tabindex="-1">三、快捷指令 <a class="header-anchor" href="#三、快捷指令" aria-label="Permalink to &quot;三、快捷指令&quot;">​</a></h1><h2 id="_1、linux-的常用命令" tabindex="-1">1、linux 的常用命令 <a class="header-anchor" href="#_1、linux-的常用命令" aria-label="Permalink to &quot;1、linux 的常用命令&quot;">​</a></h2><ul><li>rm -rf 目录 删除目录</li><li>cp -R conf.example conf 复制 conf.example（已存在文件）为 conf（未存在）</li><li>curl <a href="http://www.linux.com" target="_blank" rel="noreferrer">http://www.linux.com</a> 用于测试一台服务器是否可以到达一个网站</li><li>①yum install screen -y；②screen -S lnmp 用于解决连接非正常中断，重新连接会话</li></ul><h2 id="_2、pm2-的常用命令" tabindex="-1">2、pm2 的常用命令 <a class="header-anchor" href="#_2、pm2-的常用命令" aria-label="Permalink to &quot;2、pm2 的常用命令&quot;">​</a></h2><ul><li>pm2 list——查看进程列表</li><li>pm2 restart 0——重启服务</li><li>pm2 stop 0——停止服务</li><li>pm2 delete 0——停止后要对进程进行删除</li><li>pm2 info 0——可以查看当前进程的所有信息以及一些录像</li><li>pm2 log 0——查看日志</li><li>pm2 monit——监控进程列表</li></ul>`,44),t=[o];function r(i,c,d,p,h,m){return l(),a("div",null,t)}const b=e(s,[["render",r]]);export{g as __pageData,b as default};
