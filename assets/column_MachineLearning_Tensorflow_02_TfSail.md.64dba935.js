import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.98c15f2e.js";const F=JSON.parse('{"title":"机器学习与神经网络简介","description":"","frontmatter":{"title":"机器学习与神经网络简介","author":"周一","date":"2023-08-05","categories":["人工智能"],"tags":["机器学习"],"sidebar":"auto"},"headers":[{"level":1,"title":"一、Tensorflow.js简介","slug":"一、tensorflow-js简介","link":"#一、tensorflow-js简介","children":[{"level":2,"title":"1、Tensorflow.js是什么?","slug":"_1、tensorflow-js是什么","link":"#_1、tensorflow-js是什么","children":[]},{"level":2,"title":"2、Tensorflow.js具体功能","slug":"_2、tensorflow-js具体功能","link":"#_2、tensorflow-js具体功能","children":[]}]},{"level":1,"title":"二、安装Tensorflow.js","slug":"二、安装tensorflow-js","link":"#二、安装tensorflow-js","children":[{"level":2,"title":"1、浏览器安装","slug":"_1、浏览器安装","link":"#_1、浏览器安装","children":[]},{"level":2,"title":"2、nodejs安装","slug":"_2、nodejs安装","link":"#_2、nodejs安装","children":[]}]},{"level":1,"title":"三、为何要用Tensor？","slug":"三、为何要用tensor","link":"#三、为何要用tensor","children":[{"level":2,"title":"1、什么是Tensor？","slug":"_1、什么是tensor","link":"#_1、什么是tensor","children":[]},{"level":2,"title":"2、Tensor和机器学习有什么关系？","slug":"_2、tensor和机器学习有什么关系","link":"#_2、tensor和机器学习有什么关系","children":[{"level":3,"title":"（1）神经网络是什么样子","slug":"_1-神经网络是什么样子","link":"#_1-神经网络是什么样子","children":[]},{"level":3,"title":"（2）神经网络数据结构设计","slug":"_2-神经网络数据结构设计","link":"#_2-神经网络数据结构设计","children":[]}]}]}],"relativePath":"column/MachineLearning/Tensorflow/02_TfSail.md","filePath":"column/MachineLearning/Tensorflow/02_TfSail.md","lastUpdated":1720883064000}'),o={name:"column/MachineLearning/Tensorflow/02_TfSail.md"},p=l(`<h1 id="一、tensorflow-js简介" tabindex="-1">一、Tensorflow.js简介 <a class="header-anchor" href="#一、tensorflow-js简介" aria-label="Permalink to &quot;一、Tensorflow.js简介&quot;">​</a></h1><h2 id="_1、tensorflow-js是什么" tabindex="-1">1、Tensorflow.js是什么? <a class="header-anchor" href="#_1、tensorflow-js是什么" aria-label="Permalink to &quot;1、Tensorflow.js是什么?&quot;">​</a></h2><ul><li>一个用 <code>JavaScript</code> 实现的机器学习库，以便让我们可以用它来做一些机器学习的功能。</li><li>让前端工程师可以直接在<strong>浏览器</strong>和<strong>Node.js</strong>中使用机器学习技术，且在浏览器里面做一些更高阶的交互操作。比如：<strong>①</strong>让我们手机里面的浏览器拥有摄像头、录音等能力；<strong>②</strong>开发一些小游戏 or 人工智能的游戏。</li></ul><h2 id="_2、tensorflow-js具体功能" tabindex="-1">2、Tensorflow.js具体功能 <a class="header-anchor" href="#_2、tensorflow-js具体功能" aria-label="Permalink to &quot;2、Tensorflow.js具体功能&quot;">​</a></h2><ul><li>运行现有模型 —— 现有模型指的是那些算法工程师<strong>已经训练好的模型</strong>，我们可以直接把它转化为在浏览器里面运行的格式，然后直接用 <code>Tensorflow.js</code> 运行。</li><li>重新训练现有模型 —— 我们可以在现有模型的基础上对它进行重新训练，让它能够识别我们自定义的一些类别，比如说我们可以识别我们的手势，然后让计算机记住我们的手势，这样我们就可以用手势来控制电脑了。</li><li>使用JavaScript开发机器学习模型 —— 指的是我们可以<strong>从0开始</strong>来开发一个机器学习模型，比如：从0训练一个线性回归模型来预测身高体重，预测房价等等。</li></ul><h1 id="二、安装tensorflow-js" tabindex="-1">二、安装Tensorflow.js <a class="header-anchor" href="#二、安装tensorflow-js" aria-label="Permalink to &quot;二、安装Tensorflow.js&quot;">​</a></h1><p>我们可以在<strong>浏览器</strong>和<code>node.js</code>中安装<code>tensorflow.js</code>，来看看如何安装。</p><h2 id="_1、浏览器安装" tabindex="-1">1、浏览器安装 <a class="header-anchor" href="#_1、浏览器安装" aria-label="Permalink to &quot;1、浏览器安装&quot;">​</a></h2><p>浏览器安装有两种方式：</p><ul><li>使用<code>Script</code>标签来引入<code>Tensorflow.js</code>。</li><li>使用<code>NPM</code>包安装，并使用<code>Parcel</code>或<code>Webpack</code>构建。</li></ul><p>下面我们来说下<code>npm</code>这种安装方式。首先，需要在项目安装<code>@tensorflow/tsjs</code>：</p><div class="language-Bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@tensorflow/tfjs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@tensorflow/tfjs</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>之后，在<code>js</code>文件里进行使用。比如：</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 把@tensorflow/tfjs打包出来的所有接口，变成一个对象</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> tf </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@tensorflow/tfjs&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tf.</span><span style="color:#B392F0;">tensor</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">a.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 把@tensorflow/tfjs打包出来的所有接口，变成一个对象</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> tf </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@tensorflow/tfjs&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tf.</span><span style="color:#6F42C1;">tensor</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">a.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>至此，我们就可以在浏览器使用<code>tensorflow</code>这个库啦！</p><h2 id="_2、nodejs安装" tabindex="-1">2、nodejs安装 <a class="header-anchor" href="#_2、nodejs安装" aria-label="Permalink to &quot;2、nodejs安装&quot;">​</a></h2><p>第二种要讲的是，在<code>nodejs</code>环境中安装<code>tensorflow</code>。不过，这种方式会有一点麻烦的是，<code>nodejs</code>环境依赖于<code>GPU</code>，所以要先给我们的系统安装带有支持<code>GPU</code>的环境，才能让<code>tensorflow</code>在<code>nodejs</code>环境中使用。</p><p>首先第一步，先在mac里面安装<code>tensorflow.js</code>，具体戳此链接：<a href="https://zhuanlan.zhihu.com/p/436908946?utm_id=0" target="_blank" rel="noreferrer">【环境备份】Mac M1 系列(Apple Silicon)各版本的 TensorFlow 及安装方法(支持 Mac GPU 加速)</a>。</p><p>之后，我们其实就有了<code>conda</code>环境，然后需要使用<code>conda</code>环境来安装 <code>Tensorflow C库</code>。具体步骤如下👇🏻：</p><p><img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202407132302788.png" alt="img"></p><p>安装完成之后，就可以在我们的项目里面，安装@tensorflow/tfjs-node这个库：</p><div class="language-Bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@tensorflow/tfjs-node</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@tensorflow/tfjs-node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>之后，让这个库，在项目中使用：</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 把import改为node.js中commonjs的语法</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tf</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@tensorflow/tfjs-node&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tf.</span><span style="color:#B392F0;">tensor</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">a.</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 把import改为node.js中commonjs的语法</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tf</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@tensorflow/tfjs-node&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tf.</span><span style="color:#6F42C1;">tensor</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">a.</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h1 id="三、为何要用tensor" tabindex="-1">三、为何要用Tensor？ <a class="header-anchor" href="#三、为何要用tensor" aria-label="Permalink to &quot;三、为何要用Tensor？&quot;">​</a></h1><h2 id="_1、什么是tensor" tabindex="-1">1、什么是Tensor？ <a class="header-anchor" href="#_1、什么是tensor" aria-label="Permalink to &quot;1、什么是Tensor？&quot;">​</a></h2><ul><li>中文名叫<strong>张量</strong></li><li>张量<strong>是</strong>向量和矩阵向更高维度的推广</li><li>可以理解为，张量相当于<strong>多维数组</strong></li></ul><h2 id="_2、tensor和机器学习有什么关系" tabindex="-1">2、Tensor和机器学习有什么关系？ <a class="header-anchor" href="#_2、tensor和机器学习有什么关系" aria-label="Permalink to &quot;2、Tensor和机器学习有什么关系？&quot;">​</a></h2><h3 id="_1-神经网络是什么样子" tabindex="-1">（1）神经网络是什么样子 <a class="header-anchor" href="#_1-神经网络是什么样子" aria-label="Permalink to &quot;（1）神经网络是什么样子&quot;">​</a></h3><p><img src="https://mondaylab-1309616765.cos.ap-shanghai.myqcloud.com/images/202407132302703.png" alt="img"></p><h3 id="_2-神经网络数据结构设计" tabindex="-1">（2）神经网络数据结构设计 <a class="header-anchor" href="#_2-神经网络数据结构设计" aria-label="Permalink to &quot;（2）神经网络数据结构设计&quot;">​</a></h3><p>如果让你设计神经网络的数据结构，你会怎么设计？</p><ul><li>神经网络的每一层要存储 <code>N</code> 维数据</li><li>之后要做 <code>N</code> 层的 <code>For</code> 循环运算</li><li><code>Tensor</code>作为高维数据结构完美解决以上问题</li></ul><p>比如下面这段代码：</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> tf </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@tensorflow/tfjs&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 传统 for 循环</span></span>
<span class="line"><span style="color:#6A737D;">// 输入层</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#6A737D;">// 第一层神经元</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">w</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// 每个神经元的权重</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#6A737D;">// 第二层神经元</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">output</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> w.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> j </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; j </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> input.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; j</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    output[i] </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> input[j] </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> w[i][j];</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(output); </span><span style="color:#6A737D;">// [30, 40, 50, 60]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// dot() 点乘法</span></span>
<span class="line"><span style="color:#E1E4E8;">tf.</span><span style="color:#B392F0;">tensor</span><span style="color:#E1E4E8;">(w).</span><span style="color:#B392F0;">dot</span><span style="color:#E1E4E8;">(tf.</span><span style="color:#B392F0;">tensor</span><span style="color:#E1E4E8;">(input)).</span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// [30, 40, 50, 60]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> tf </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@tensorflow/tfjs&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 传统 for 循环</span></span>
<span class="line"><span style="color:#6A737D;">// 输入层</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">input</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#6A737D;">// 第一层神经元</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">w</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// 每个神经元的权重</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#6A737D;">// 第二层神经元</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">output</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> w.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> input.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    output[i] </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> input[j] </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> w[i][j];</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(output); </span><span style="color:#6A737D;">// [30, 40, 50, 60]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// dot() 点乘法</span></span>
<span class="line"><span style="color:#24292E;">tf.</span><span style="color:#6F42C1;">tensor</span><span style="color:#24292E;">(w).</span><span style="color:#6F42C1;">dot</span><span style="color:#24292E;">(tf.</span><span style="color:#6F42C1;">tensor</span><span style="color:#24292E;">(input)).</span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// [30, 40, 50, 60]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>如果按照传统的方法来计算，需要写一长串代码。而如果用<code>tensorflow</code>里面的<code>tensor</code>来解决，只需要最后一句代码，就可达到我们想要的结果。</p>`,36),e=[p];function r(t,c,y,E,i,d){return n(),a("div",null,e)}const h=s(o,[["render",r]]);export{F as __pageData,h as default};
