import{_ as t,c as o,o as r,N as n}from"./chunks/framework.6510d215.js";const h=JSON.parse('{"title":"『软件工程1』详解软件是什么","description":"","frontmatter":{"title":"『软件工程1』详解软件是什么","author":"周一","date":"2021-04-30","categories":["产品汪"],"tags":["软件工程"],"sidebar":"auto"},"headers":[{"level":2,"title":"一、什么是产品","slug":"一、什么是产品","link":"#一、什么是产品","children":[]},{"level":2,"title":"二、软件的双重角色","slug":"二、软件的双重角色","link":"#二、软件的双重角色","children":[]},{"level":2,"title":"三、软件的涵义及特征","slug":"三、软件的涵义及特征","link":"#三、软件的涵义及特征","children":[]},{"level":2,"title":"四、软件应用","slug":"四、软件应用","link":"#四、软件应用","children":[]},{"level":2,"title":"五、软件危机","slug":"五、软件危机","link":"#五、软件危机","children":[]},{"level":2,"title":"六、软件神话","slug":"六、软件神话","link":"#六、软件神话","children":[]}],"relativePath":"column/Product/SoftwareEngineer/001Definition.md","lastUpdated":1644826256000}'),s={name:"column/Product/SoftwareEngineer/001Definition.md"},g=n('<h2 id="一、什么是产品" tabindex="-1">一、什么是产品 <a class="header-anchor" href="#一、什么是产品" aria-label="Permalink to &quot;一、什么是产品&quot;">​</a></h2><p><strong>1</strong>、从<strong>用户</strong>的角度 产品实际上就是<strong>信息</strong>，以某种方式使得用户世界更加美好 <strong>2</strong>、从<strong>软件工程师</strong>的角度 产品实际上就是<strong>软件</strong></p><h2 id="二、软件的双重角色" tabindex="-1">二、软件的双重角色 <a class="header-anchor" href="#二、软件的双重角色" aria-label="Permalink to &quot;二、软件的双重角色&quot;">​</a></h2><p><strong>1、产品</strong> 软件是一个<strong>信息变换器</strong>，用来获取、显示及管理信息等 <strong>2、产品交付使用的载体</strong> 软件是 ① 操作系统的基础；② 通信网络的基础；③ 其他软件工具和环境的基础</p><h2 id="三、软件的涵义及特征" tabindex="-1">三、软件的涵义及特征 <a class="header-anchor" href="#三、软件的涵义及特征" aria-label="Permalink to &quot;三、软件的涵义及特征&quot;">​</a></h2><p><strong>1、软件的涵义</strong> 软件 Software = 程序 Program + 数据 Data + 文档 Document，这些项的每一个均包含一个配置 <strong>2、软件的特征</strong> （<strong>1</strong>）软件是被<strong>开发或设计</strong>的，而不是传统意义上被制造的 （<strong>2</strong>）软件不会“磨损”，但是会退化 注：需了解两种曲线：<strong>①</strong>硬件故障率曲线（浴缸曲线）；<strong>②</strong>软件故障率曲线；<strong>具体形式图如下：</strong><img src="https://img-blog.csdnimg.cn/2021031815073912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210318150753618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"> （3）虽然软件产业正在向<strong>基于构件</strong>的组装前进，大多数软件仍然是定制的 -&gt;构件：是<strong>可复用的</strong>组成部分，可被用于构造其他软件，比如一些被封装的对象类、功能模块及软件框架等</p><h2 id="四、软件应用" tabindex="-1">四、软件应用 <a class="header-anchor" href="#四、软件应用" aria-label="Permalink to &quot;四、软件应用&quot;">​</a></h2><p><strong>1</strong>、系统软件 <strong>2</strong>、应用软件 <strong>3</strong>、工程/科学软件 <strong>4</strong>、Web 应用软件 <strong>5</strong>、人工智能软件 <strong>6</strong>、……</p><h2 id="五、软件危机" tabindex="-1">五、软件危机 <a class="header-anchor" href="#五、软件危机" aria-label="Permalink to &quot;五、软件危机&quot;">​</a></h2><p><strong>1、软件危机的表现</strong> （1）对软件<strong>开发成本</strong>和<strong>进度</strong>的估计常常不准确（开发成本超出预算，实际进度比预定计划一再拖延的现象并不罕见） （2）用户对“已完成”系统<strong>不满意</strong>的现象经常发生 （3）软件产品的<strong>质量</strong>往往靠不住，bug 一大堆 （4）软件的<strong>可维护程度</strong>非常之低 （5）软件通常没有适当的<strong>文档资料</strong> （6）软件的<strong>成本不断提高</strong> （7）软件<strong>开发生产率的提高</strong>赶不上硬件的发展和人们需求的增长 <strong>2、软件危机引发的思考</strong> （<strong>1</strong>）How do we ensure the quality of the software that we produce? 我们如何确保我们所产生软件的质量？ （<strong>2</strong>）How do we meet growing demand and still maintain budget control? 我们如何满足日益增长的需求，同时又保持预算控制？ （<strong>3</strong>）How do we upgrade an ageing “software plan”? 我们如何升级老化的“软件计划”？ （<strong>4</strong>）How do we avoid disastrous time delays? 我们如何避免灾难性的时间延误？ （5）How do we successfully institute new software technologies? 我们如何成功的研究新的软件技术？ <strong>3、减轻软件危机的途径</strong> （<strong>1</strong>）对计算机软件有一个正确的认识（<strong>软件 ≠ 程序</strong>）。 （<strong>2</strong>）必须充分认识到软件开发不是某种<strong>个体劳动的神秘技巧</strong>，而应该是一种组织良好、管理严密、各类人员协同配合、共同完成的<strong>工程项目</strong>。 （<strong>3</strong>）推广使用在实践中总结出来的开发软件的<strong>成功技术和方法</strong>。 （<strong>4</strong>）开发和使用更好的<strong>软件工具</strong>。</p><h2 id="六、软件神话" tabindex="-1">六、软件神话 <a class="header-anchor" href="#六、软件神话" aria-label="Permalink to &quot;六、软件神话&quot;">​</a></h2><p><strong>1、三大软件神话</strong><strong>（1）管理者的神话</strong><strong>①</strong>已有了关于开发软件的标准和规程的书籍，可提供所有的信息。 <strong>②</strong>已有了很多很好的软件开发工具和最新的计算机。 <strong>③</strong>如果已落后于计划，可以增加更多的程序员来赶上进度。 <strong>④</strong>如果决定“外包”，就可以放松让承包公司去建造。 <strong>（2）客户神话</strong><strong>①</strong>有了对目标的一般性描述，就可以开始写程序。 <strong>②</strong>项目需求可以不断变更，因为软件是灵活的。 <strong>But...变更的代价是：</strong><img src="https://img-blog.csdnimg.cn/20210318160659802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><strong>（3）实践者的神话</strong><strong>①</strong>一旦写出程序并正常运行，工作就结束了。 <strong>②</strong>在程序真正开始运行之前无法评估其质量。 <strong>③</strong>一个成功的项目唯一应该提交的就是运行程序。 <strong>④</strong>软件工程将使我们创建大量的、不必要的文档，并总是延缓进度。 <strong>2、软件开发过程中各单位分配比例</strong> （<strong>1</strong>）工作量分配比例 <img src="https://img-blog.csdnimg.cn/20210318160717914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>（<strong>2</strong>）费用分配比例 <img src="https://img-blog.csdnimg.cn/20210318160724394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"> 如果这篇文章对你有帮助，记得留下<strong>star</strong>哦~</p>',14),e=[g];function a(i,l,c,d,p,_){return r(),o("div",null,e)}const u=t(s,[["render",a]]);export{h as __pageData,u as default};
