import{_ as t,c as r,o,N as n}from"./chunks/framework.6510d215.js";const _=JSON.parse('{"title":"『软件工程4』一文了解软件项目管理中的4P","description":"","frontmatter":{"title":"『软件工程4』一文了解软件项目管理中的4P","author":"周一","date":"2021-05-19","categories":["产品汪"],"tags":["软件工程"]},"headers":[{"level":1,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":1,"title":"一、项目管理的重要性和定义","slug":"一、项目管理的重要性和定义","link":"#一、项目管理的重要性和定义","children":[{"level":2,"title":"1、重要性（两个阶段）","slug":"_1、重要性-两个阶段","link":"#_1、重要性-两个阶段","children":[]},{"level":2,"title":"2、软件项目管理的定义","slug":"_2、软件项目管理的定义","link":"#_2、软件项目管理的定义","children":[]}]},{"level":1,"title":"二、管理四要素 4P","slug":"二、管理四要素-4p","link":"#二、管理四要素-4p","children":[{"level":2,"title":"1、管理的四要素(4P)","slug":"_1、管理的四要素-4p","link":"#_1、管理的四要素-4p","children":[]},{"level":2,"title":"2、软件项目中影响最终结果的要素","slug":"_2、软件项目中影响最终结果的要素","link":"#_2、软件项目中影响最终结果的要素","children":[]},{"level":2,"title":"3、项目管理关心的问题","slug":"_3、项目管理关心的问题","link":"#_3、项目管理关心的问题","children":[]}]},{"level":1,"title":"三、项目参与者类型(people)","slug":"三、项目参与者类型-people","link":"#三、项目参与者类型-people","children":[]},{"level":1,"title":"四、项目小组结构(people)","slug":"四、项目小组结构-people","link":"#四、项目小组结构-people","children":[{"level":2,"title":"1、项目的三种一般小组组织形式","slug":"_1、项目的三种一般小组组织形式","link":"#_1、项目的三种一般小组组织形式","children":[]},{"level":2,"title":"2、关于小组结构的说明","slug":"_2、关于小组结构的说明","link":"#_2、关于小组结构的说明","children":[]},{"level":2,"title":"3、项目小组人员间的通信路径","slug":"_3、项目小组人员间的通信路径","link":"#_3、项目小组人员间的通信路径","children":[]},{"level":2,"title":"4、小组结构的选择需考虑的因素","slug":"_4、小组结构的选择需考虑的因素","link":"#_4、小组结构的选择需考虑的因素","children":[]},{"level":2,"title":"5、思考题","slug":"_5、思考题","link":"#_5、思考题","children":[]}]},{"level":1,"title":"五、软件范围及问题分解(product)","slug":"五、软件范围及问题分解-product","link":"#五、软件范围及问题分解-product","children":[{"level":2,"title":"1、预告","slug":"_1、预告","link":"#_1、预告","children":[]},{"level":2,"title":"2、软件范围的确定（划定问题的边界）","slug":"_2、软件范围的确定-划定问题的边界","link":"#_2、软件范围的确定-划定问题的边界","children":[]},{"level":2,"title":"3、问题分解（确定各部分的功能）","slug":"_3、问题分解-确定各部分的功能","link":"#_3、问题分解-确定各部分的功能","children":[]}]},{"level":1,"title":"六、过程(process)","slug":"六、过程-process","link":"#六、过程-process","children":[{"level":2,"title":"1、一般性阶段","slug":"_1、一般性阶段","link":"#_1、一般性阶段","children":[]},{"level":2,"title":"2、选择过程模型阶段","slug":"_2、选择过程模型阶段","link":"#_2、选择过程模型阶段","children":[]},{"level":2,"title":"3、已确定过程模型阶段","slug":"_3、已确定过程模型阶段","link":"#_3、已确定过程模型阶段","children":[]}]},{"level":1,"title":"七、产品和过程的二元性(product and process)","slug":"七、产品和过程的二元性-product-and-process","link":"#七、产品和过程的二元性-product-and-process","children":[]},{"level":1,"title":"八、项目的 5W2H 原则(project)","slug":"八、项目的-5w2h-原则-project","link":"#八、项目的-5w2h-原则-project","children":[]},{"level":1,"title":"九、写在最后——think more","slug":"九、写在最后——think-more","link":"#九、写在最后——think-more","children":[]}],"relativePath":"column/Product/SoftwareEngineer/004Product.md","lastUpdated":1644826256000}'),e={name:"column/Product/SoftwareEngineer/004Product.md"},s=n('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><p>在日常的软件开发中，很多人可能认为只要技术实力够了，不需要任何的软件项目管理。但殊不知的是，<strong>软件项目管理</strong>对于整个软件项目起着至关重要的作用，甚至有可能关乎到软件项目的生死存亡。一项调查显示，<strong>70%的项目失败是由于管理不善引起的</strong>，而并不是因为技术实力不够的原因。</p><p>那在软件项目管理当中，重要的 4 个因素又是什么呢？</p><p>在下面的这篇文章当中，将讲解软件项目管理中的 4 个重要因素 4P， <code>people</code> 、 <code>product</code> 、 <code>process</code> 、 <code>project</code> 。</p><h1 id="一、项目管理的重要性和定义" tabindex="-1">一、项目管理的重要性和定义 <a class="header-anchor" href="#一、项目管理的重要性和定义" aria-label="Permalink to &quot;一、项目管理的重要性和定义&quot;">​</a></h1><h2 id="_1、重要性-两个阶段" tabindex="-1">1、重要性（两个阶段） <a class="header-anchor" href="#_1、重要性-两个阶段" aria-label="Permalink to &quot;1、重要性（两个阶段）&quot;">​</a></h2><p><strong>（1）20 世纪 70 年代中期</strong></p><p>①<u>70%的项目失败</u>是由于<strong>管理不善</strong>引起的，而并不是因为技术实力不够；</p><p><strong>②</strong><u>管理</u>是影响软件研发项目<strong>全局</strong>的因素，而<u>技术</u>只影响<strong>局部</strong>的因素。</p><p><strong>（2）20 世纪 90 年代中期</strong></p><p>美国软件工程实施现状的调查：</p><p><strong>①</strong><u>10%</u>的项目能够在预定的费用和进度下交付；</p><p><strong>②</strong><u>软件项目管理</u>成为软件项目开发中最重要的<strong>核心问题</strong>之一。</p><h2 id="_2、软件项目管理的定义" tabindex="-1">2、软件项目管理的定义 <a class="header-anchor" href="#_2、软件项目管理的定义" aria-label="Permalink to &quot;2、软件项目管理的定义&quot;">​</a></h2><p><strong>（1）定义</strong></p><p>软件项目管理是为了使软件项目能够顺利完成，而对<strong>成本</strong>、<strong>人员</strong>、<strong>进度</strong>、<strong>质量</strong>、<strong>风险</strong>等进行分析和管理的活动。</p><p><strong>（2）对象</strong></p><p><strong>软件工程项目</strong>，它所涉及的范围覆盖了整个软件工程过程。</p><p><strong>（3）何时（即什么时候做项目管理）</strong></p><p>这种管理<u>在技术工作开始之前</u>就应<strong>开始</strong>，在软件<u>从概念到实现</u>的过程中<strong>继续进行</strong>，当<u>软件工程过程最后结束</u>时才<strong>终止</strong>。</p><h1 id="二、管理四要素-4p" tabindex="-1">二、管理四要素 4P <a class="header-anchor" href="#二、管理四要素-4p" aria-label="Permalink to &quot;二、管理四要素 4P&quot;">​</a></h1><h2 id="_1、管理的四要素-4p" tabindex="-1">1、管理的四要素(4P) <a class="header-anchor" href="#_1、管理的四要素-4p" aria-label="Permalink to &quot;1、管理的四要素(4P)&quot;">​</a></h2><ul><li><strong>人员 People</strong> —— 成功项目的重要因素；</li><li><strong>产品 Product</strong> —— 要开发的软件；</li><li><strong>过程 Process</strong> —— 软件工程的框架活动，包含了任务、里程碑、工作产品以及质量保证点；</li><li><strong>项目 Project</strong> —— 开发软件所需要的所有工作</li></ul><h2 id="_2、软件项目中影响最终结果的要素" tabindex="-1">2、软件项目中影响最终结果的要素 <a class="header-anchor" href="#_2、软件项目中影响最终结果的要素" aria-label="Permalink to &quot;2、软件项目中影响最终结果的要素&quot;">​</a></h2><ul><li>规模</li><li>提交的期限</li><li>预算和代价</li><li>应用领域</li><li>运用的技术</li><li>系统约束</li><li>用户需求</li><li>可提供的资源</li></ul><h2 id="_3、项目管理关心的问题" tabindex="-1">3、项目管理关心的问题 <a class="header-anchor" href="#_3、项目管理关心的问题" aria-label="Permalink to &quot;3、项目管理关心的问题&quot;">​</a></h2><ul><li>产品的质量</li><li>风险的识别和管理</li><li>度量</li><li>代价估算</li><li>项目进度</li><li>和客户交流</li><li>项目成员</li><li>其他资源</li><li>项目监控</li></ul><p><strong>PS: 以下将对 4P 的内容进行详细分析。</strong></p><h1 id="三、项目参与者类型-people" tabindex="-1">三、项目参与者类型(people) <a class="header-anchor" href="#三、项目参与者类型-people" aria-label="Permalink to &quot;三、项目参与者类型(people)&quot;">​</a></h1><p>项目参与者类型一般包括以下几类：</p><ul><li><strong>高级管理者</strong>：负责定义业务问题；</li><li><strong>项目(技术)管理者</strong>：必须计划、激励、组织和控制软件开发人员；</li><li><strong>开发人员</strong>：负责开发一个产品或应用所需的专门技术；</li><li><strong>客户</strong>：负责说明待开发软件相关需求的人以及其他风险承担者；</li><li><strong>最终用户</strong>：一旦软件发布成为产品，最终用户是直接与软件进行交互的人</li></ul><blockquote><p><strong>总结：</strong> ① 高级管理者，即<strong>定义业务问题</strong>的人； ② 项目管理者，即<strong>管理软件开发</strong>的人； ③ 开发人员，即<strong>应用技术开发软件</strong>的人； ④ 客户，即<strong>提出软件需求，并承担一定风险</strong>的人； ⑤ 最终用户，即<strong>与软件交互</strong>的人。</p></blockquote><h1 id="四、项目小组结构-people" tabindex="-1">四、项目小组结构(people) <a class="header-anchor" href="#四、项目小组结构-people" aria-label="Permalink to &quot;四、项目小组结构(people)&quot;">​</a></h1><h2 id="_1、项目的三种一般小组组织形式" tabindex="-1">1、项目的三种一般小组组织形式 <a class="header-anchor" href="#_1、项目的三种一般小组组织形式" aria-label="Permalink to &quot;1、项目的三种一般小组组织形式&quot;">​</a></h2><p><strong>（1）民主分散式</strong>（Democratic Decentralized, DD）</p><p><strong>（2）控制分散式</strong>（Controlled Decentralized, CD）</p><p><strong>（3）控制集中式</strong>（Controlled Centralized, CC）</p><h2 id="_2、关于小组结构的说明" tabindex="-1">2、关于小组结构的说明 <a class="header-anchor" href="#_2、关于小组结构的说明" aria-label="Permalink to &quot;2、关于小组结构的说明&quot;">​</a></h2><p><strong>（1）DD（民主分散式）</strong>：没有固定的负责人，适合<strong>难度比较高、交付期限很长及生存期较长</strong>的项目，最适合于解决<strong>模块化程度比较低</strong>的问题，因为需要通信；</p><p><strong>通俗来说</strong>：没有负责人，只有水平通信，成员之间需要广泛的两两交流。</p><p><strong>（2）CD（控制分散式）</strong>：有一个<strong>固定的负责人</strong>，若有子负责人，<u>子负责人和总负责人的通信</u>是<strong>垂直</strong>的，而<u>个人间的通信</u>是<strong>水平</strong>的，适合<strong>交付期限较长、比较简单</strong>的项目；</p><p><strong>通俗来说</strong>：有固定负责人，成员之间需要交流，成员与负责人之间也需要交流；若有子负责人，成员跟子负责交流，子负责人跟总负责交流。</p><p><strong>（3）CC（控制集中式）</strong>：<u>负责人和小组成员之间的通信</u>是<strong>垂直</strong>的，适合解决<strong>交付期限比较严格的、简单的、模块化程度高</strong>的项目</p><p><strong>通俗来说</strong>：有固定负责人，成员之间不沟通，只跟上级沟通。</p><p><strong>注</strong>：CD 和 CC 两种结构都需要有一个固定的负责人，而 DD 不用；且会比 DD 产生更少的缺陷。</p><h2 id="_3、项目小组人员间的通信路径" tabindex="-1">3、项目小组人员间的通信路径 <a class="header-anchor" href="#_3、项目小组人员间的通信路径" aria-label="Permalink to &quot;3、项目小组人员间的通信路径&quot;">​</a></h2><p><img src="https://img-blog.csdnimg.cn/2021032316365918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="项目小组人员间的通信路径"> 从上图中可以看出，项目小组人数越多，通信路径越多。 <strong>通信路径计算公式为</strong>：</p><p>$$ C_n^2=\\frac{n(n-1)}{2} ，n表示水平通信成员间的人数 $$</p><h2 id="_4、小组结构的选择需考虑的因素" tabindex="-1">4、小组结构的选择需考虑的因素 <a class="header-anchor" href="#_4、小组结构的选择需考虑的因素" aria-label="Permalink to &quot;4、小组结构的选择需考虑的因素&quot;">​</a></h2><p><strong>对于一个小组来说，选择一个合适的结构需考虑以下因素：</strong></p><ul><li>待解决软件项目的<strong>困难程度</strong>；</li><li>产生的<strong>程序规模</strong>，以代码行或者功能点来衡量；</li><li>小组成员需要共同工作的时间（<strong>小组生存期</strong>）；</li><li>项目所需要的<strong>通信的程度</strong>；</li><li>问题能够被<strong>模块化的程度</strong>；</li><li>待建造系统所要求的<strong>质量和可靠性</strong>；</li><li><strong>交付日期</strong>的严格程度</li></ul><h2 id="_5、思考题" tabindex="-1">5、思考题 <a class="header-anchor" href="#_5、思考题" aria-label="Permalink to &quot;5、思考题&quot;">​</a></h2><p><strong>Q1</strong>：某公司有 21 名员工，请问分别按 DD、CD、CC 方式来进行组织结构的划分，各自会产生多少条的通信路径？假设在 CD 和 CC 方式下被分成四组，画出大概的组织结构图。</p><p><strong>A1</strong>：</p><p><img src="https://img-blog.csdnimg.cn/20210323163833626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="思考题解答"> 下面给出<strong>无子负责人</strong>和<strong>有子负责人</strong>的框架图：</p><p><img src="https://img-blog.csdnimg.cn/20210323231528391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="无子负责人"><img src="https://img-blog.csdnimg.cn/2021032323160086.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="有子负责人"> 写到这里，不妨再思考下，在 CD 和 CC 方式下被分成<strong>五组</strong>，有多少条通信路径？组织架构又是怎么样的呢？ 评论区留下你的答案~</p><h1 id="五、软件范围及问题分解-product" tabindex="-1">五、软件范围及问题分解(product) <a class="header-anchor" href="#五、软件范围及问题分解-product" aria-label="Permalink to &quot;五、软件范围及问题分解(product)&quot;">​</a></h1><h2 id="_1、预告" tabindex="-1">1、预告 <a class="header-anchor" href="#_1、预告" aria-label="Permalink to &quot;1、预告&quot;">​</a></h2><p><strong>在开始进行一个项目之前，应该了解些什么呢？</strong></p><p>（<strong>1</strong>）<strong>在进行项目计划之前，软件开发者和客户必须一起定义产品的目的和范围</strong>，考虑可选的解决方案，标识技术和管理的约束；</p><p>（<strong>2</strong>）没有这些信息，就不可能进行合理的（准确的）<strong>成本估算</strong>、有效的<strong>风险评估</strong>、适当的<strong>项目任务划分</strong>或是可管理的<strong>项目进度安排</strong>；</p><p>（<strong>3</strong>）软件范围是软件项目管理的<strong>第一个</strong>活动。</p><p>通过下面一张图来加深对<strong>软件范围</strong>的理解。</p><p><img src="https://img-blog.csdnimg.cn/202103231643547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="软件范围"></p><p>圆圈里的内容即软件范围，确定该项目要做什么；那么不在圈子里面的，就先抛开，也就是说，不该做的内容先不要做。</p><h2 id="_2、软件范围的确定-划定问题的边界" tabindex="-1">2、软件范围的确定（划定问题的边界） <a class="header-anchor" href="#_2、软件范围的确定-划定问题的边界" aria-label="Permalink to &quot;2、软件范围的确定（划定问题的边界）&quot;">​</a></h2><p>（<strong>1</strong>）语境；</p><p>（<strong>2</strong>）信息目标；</p><p>（<strong>3</strong>）功能和性能</p><h2 id="_3、问题分解-确定各部分的功能" tabindex="-1">3、问题分解（确定各部分的功能） <a class="header-anchor" href="#_3、问题分解-确定各部分的功能" aria-label="Permalink to &quot;3、问题分解（确定各部分的功能）&quot;">​</a></h2><p>（<strong>1</strong>）分而治之；</p><p>（<strong>2</strong>）估算开始之前，范围中所描述的<strong>软件功能</strong>必须被<strong>评估和细化</strong>，以提供更多的细节。因为成本和进度的估算都是<strong>面向功能</strong>的，所以某种程度的分解通常是很有用的。</p><h1 id="六、过程-process" tabindex="-1">六、过程(process) <a class="header-anchor" href="#六、过程-process" aria-label="Permalink to &quot;六、过程(process)&quot;">​</a></h1><h2 id="_1、一般性阶段" tabindex="-1">1、一般性阶段 <a class="header-anchor" href="#_1、一般性阶段" aria-label="Permalink to &quot;1、一般性阶段&quot;">​</a></h2><p>（<strong>1</strong>）软件过程的一般性阶段（定义、开发和支持）适用于所有软件项目；</p><p>（<strong>2</strong>）问题在于选择一个适合项目组所要开发软件的过程模型。</p><p><a href="https://blog.csdn.net/weixin_44803753/article/details/115049621?spm=1001.2014.3001.5501" target="_blank" rel="noreferrer">回顾下上一篇文章提到过的过程模型：</a></p><ul><li>线性顺序模型（瀑布模型）</li><li>V 模型</li><li>原型实现模型</li><li>RAD 模型</li><li>增量模型</li><li>螺旋模型</li><li>形式化方法模型</li></ul><h2 id="_2、选择过程模型阶段" tabindex="-1">2、选择过程模型阶段 <a class="header-anchor" href="#_2、选择过程模型阶段" aria-label="Permalink to &quot;2、选择过程模型阶段&quot;">​</a></h2><p>项目管理者必须决定<strong>哪一个过程模型</strong>最适合用在此项目，因此在选择过程模型时需考虑以下因素：</p><p>（<strong>1</strong>）需要该产品的客户和将做此工作的人员；</p><p>（<strong>2</strong>）产品本身的特征；</p><p>（<strong>3</strong>）软件项目组工作的项目环境。</p><h2 id="_3、已确定过程模型阶段" tabindex="-1">3、已确定过程模型阶段 <a class="header-anchor" href="#_3、已确定过程模型阶段" aria-label="Permalink to &quot;3、已确定过程模型阶段&quot;">​</a></h2><p>（<strong>1</strong>）当一个过程模型被选定时，项目组基于<strong>通用过程框架活动集合</strong>，定义一个初步的计划；</p><p>（<strong>2</strong>）一旦建立了初步的计划，便可以开始进行过程分解，即必须建立一个完整的计划以<strong>反映框架活动中所需要的工作任务</strong>；</p><p>（<strong>3</strong>）工作任务必须针对项目的特定需要进行适应性修改；且框架活动总是一样的，但工作任务则要根据<strong>一系列的适应性标准</strong>来选择。</p><h1 id="七、产品和过程的二元性-product-and-process" tabindex="-1">七、产品和过程的二元性(product and process) <a class="header-anchor" href="#七、产品和过程的二元性-product-and-process" aria-label="Permalink to &quot;七、产品和过程的二元性(product and process)&quot;">​</a></h1><p><img src="https://img-blog.csdnimg.cn/20210323164708342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgwMzc1Mw==,size_16,color_FFFFFF,t_70#pic_center" alt="产品和过程的二元性"> 从上图中可以看出，横向坐标表示<strong>过程</strong>，纵向坐标表示<strong>产品</strong>，也就是说，每一个产品都有它对应的一系列过程。所以，在一个项目中，产品和过程都一样重要，缺了谁都不行，这也就体现了<strong>产品和过程的二元性</strong>。</p><h1 id="八、项目的-5w2h-原则-project" tabindex="-1">八、项目的 5W2H 原则(project) <a class="header-anchor" href="#八、项目的-5w2h-原则-project" aria-label="Permalink to &quot;八、项目的 5W2H 原则(project)&quot;">​</a></h1><p><strong>项目的 5W2H 原则包含以下几点：</strong></p><ul><li><strong>WHY</strong> —— 为什么(Why)该系统被开发？（<strong>业务目的</strong>）</li><li><strong>WHAT</strong> —— 将做什么(What)？（<strong>项目任务</strong>）</li><li><strong>WHEN</strong> —— 什么时候(When)做？（<strong>里程碑</strong>）</li><li><strong>WHO</strong> —— 某功能由谁(Who)负责？（<strong>角色和责任</strong>）</li><li><strong>WHERE</strong> —— 他们的机构组织位于何处(Where)？（<strong>角色责任界定</strong>）</li><li><strong>HOW</strong> —— 工作将如何(How)被技术和管理地进行？（<strong>管理和技术策略</strong>）</li><li><strong>HOW MUCH</strong> —— 每种资源需要多少(How much)？（<strong>资源分配</strong>）</li></ul><h1 id="九、写在最后——think-more" tabindex="-1">九、写在最后——think more <a class="header-anchor" href="#九、写在最后——think-more" aria-label="Permalink to &quot;九、写在最后——think more&quot;">​</a></h1><p>看完上面文章内容后，不妨试问下自己以下问题：</p><p><strong>分析如下具体项目情况，选择合适的团队结构（CC、CD、DD）及软件过程模型，并分析原因。</strong></p><p><strong>Q1</strong>：在一个信息系统组织中，你被指派为项目经理。你的工作是开发一个应用程序，该程序类似于你的团队以前已经做过的某个项目，只是规模更大而且更复杂一些。需求已经由用户写成文档。</p><p><strong>Q2</strong>：你被指派为一个小型软件产品公司的项目经理。你的工作是开发一个有突破性的产品，该产品结合了虚拟现实的硬件和高超的软件。因为家庭娱乐市场的竞争非常激烈，完成这项工作的压力很大。</p><p><strong>Q3</strong>：你被指派为一个大型软件产品公司的项目经理。你的工作是管理该公司已被广泛使用的字处理软件的新版本的开发。因为必须获得新的收益，已经规定了紧迫的最后期限并对外公布。</p><p><strong>Q4</strong>：在一个为遗传工程领域服务的公司中，你被指派为项目经理。你的工作是管理一个软件新产品的开发，该产品能够加速基因分解的速度。这项工作是面向研究及开发的，但其目标是在下一年度内生产出产品。</p><p><strong>评论区留下你的答案 ٩(๑❛ᴗ❛๑)۶</strong></p><p><strong>PS</strong> 本文篇幅较长，有不理解或者有误的地方欢迎私聊或加我微信 <code>MondayLaboratory</code> 交流~</p><blockquote><ul><li>公众号：星期一研究室</li><li>微信：MondayLaboratory</li></ul><p>如果这篇文章对你有帮助，记得留下<strong>star</strong>哦~</p></blockquote>',102),l=[s];function a(i,g,p,c,h,d){return o(),r("div",null,l)}const m=t(e,[["render",a]]);export{_ as __pageData,m as default};
